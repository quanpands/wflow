%!PS-Adobe-2.0 EPSF-1.2
%%Creator: FreeHand
%%Title: LOCATTR.FH
%%CreationDate: 30-07-96 16:57:4
%%BoundingBox:94.9639 490.5419 527.5333 820.2933
%%DocumentProcSets: FreeHand_header 3 0
%%DocumentSuppliedProcSets: FreeHand_header 3 0
%%ColorUsage: Color
%%DocumentFonts: Symbol
%%+Times-Roman
%%DocumentNeededFonts: Symbol
%%+Times-Roman
%%EndComments
%%BeginProcSet: FreeHand_header 3 0
/FHIODict 30 dict def
FHIODict begin
/bdf{bind def}bind def
/d{setdash}bdf
/h{closepath}bdf
/H{}bdf
/J{setlinecap}bdf
/j{setlinejoin}bdf
/M{setmiterlimit}bdf
/n{newpath}bdf
/N{newpath}bdf
/q{gsave}bdf
/Q{grestore}bdf
/w{setlinewidth}bdf
/u{}bdf
/U{}bdf
/OB{pop pop pop pop pop pop}bind def
/SB{pop pop pop pop}bind def
/sepdef{
dup where not
{
FreeHandSepDict
}
if
3 1 roll exch put
}bdf
/`
{ false setoverprint
end%. FreeHandDict
/-save0- save def
pop pop pop pop pop
concat
userdict begin
/showpage {} def
0 setgray 0 setlinecap 1 setlinewidth
0 setlinejoin 10 setmiterlimit [] 0 setdash newpath
/languagelevel where {pop languagelevel 1 ne{false setstrokeadjust}if}if
} bdf
/~
{ end
-save0- restore
FreeHandDict begin
}bdf
/FreeHandDict 223 dict def
FreeHandDict begin
/currentpacking where{pop true setpacking}if
/xdf{exch def}bdf
/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdf
/min{2 copy gt{exch}if pop}bdf
/max{2 copy lt{exch}if pop}bdf
/isLino statusdict /product get (Lino) anchorsearch{pop pop true}{pop false}ifelse def
/dr{transform .25 sub round .25 add
exch .25 sub round .25 add exch itransform}bdf
/C{dr curveto}bdf
/L{dr lineto}bdf
/m{dr moveto}bdf
/printerRes
gsave
matrix defaultmatrix setmatrix
72 72 dtransform
abs exch abs
max
grestore
def
/maxsteps 256 def
/calcgraysteps {
currentscreen pop exch
printerRes exch div exch
2 copy
sin mul round dup mul
3 1 roll
cos mul round dup mul
add 1 add
dup maxsteps gt {pop maxsteps} if
} bdf
/bottom -0 def
/delta -0 def
/frac -0 def
/left -0 def
/numsteps -0 def
/numsteps1 -0 def
/radius -0 def
/right -0 def
/top -0 def
/xt -0 def
/yt -0 def
/df currentflat def
/tempstr 1 string def
/clipflatness currentflat def
/inverted?
0 currenttransfer exec .5 ge def
/level2
/languagelevel where {pop languagelevel 1 ne}{false}ifelse def
/colorexists
level2
{
statusdict/processcolors known
{statusdict/processcolors get exec}{1}ifelse
4 eq def
}
{systemdict/setcmykcolor known def}ifelse
/tc1 [0 0 0 1] def
/tc2 [0 0 0 1] def
/fc [0 0 0 1] def
/sc [0 0 0 1] def
/concatprocs{
/packedarray where
{pop dup type /packedarraytype eq 2 index type /packedarraytype eq or}{false}ifelse
{
/proc2 exch cvlit def /proc1 exch cvlit def
proc1 aload pop proc2 aload pop
proc1 length proc2 length add packedarray cvx
}
{
/proc2 exch cvlit def /proc1 exch cvlit def
/newproc proc1 length proc2 length add array def
newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval
newproc cvx
}ifelse
}bdf
/storerect{/top xdf/right xdf/bottom xdf/left xdf}bdf
/rectpath{newpath left bottom m left top L
right top L right bottom L closepath}bdf
/i{dup 0 eq
{pop df dup}
{dup} ifelse
/clipflatness xdf setflat
}bdf
version cvr 38.0 le
{/setrgbcolor{
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
setrgbcolor}bdf}if
/gettint{0 get}bdf
/puttint{0 exch put}bdf
/vms {/vmsv save def} bdf
/vmr {vmsv restore} bdf
/vmrs{vmsv restore /vmsv save def}bdf
/eomode{
{/filler /eofill load def /clipper /eoclip load def}
{/filler /fill load def /clipper /clip load def}
ifelse
}bdf
/CD{/NF exch def{exch dup/FID ne 1 index/UniqueID ne and{exch NF 3 1 roll put}
{pop pop}ifelse}forall NF}bdf
/MN{1 index length/Len exch def
dup length Len add string dup
Len 4 -1 roll putinterval dup 0 4 -1 roll putinterval}bdf
/RC{4 -1 roll /ourvec xdf 256 string cvs(|______)anchorsearch
{1 index MN cvn/NewN exch def cvn
findfont dup maxlength dict CD dup/FontName NewN put dup
/Encoding ourvec put NewN exch definefont pop}{pop}ifelse}bdf
/RF{dup FontDirectory exch known{pop 3 -1 roll pop}{RC}ifelse}bdf
/FF{dup 256 string cvs(|______)exch MN cvn dup FontDirectory exch known
{exch pop findfont 3 -1 roll pop}{pop dup findfont dup maxlength dict CD dup dup
/Encoding exch /Encoding get 256 array copy 7 -1 roll {3 -1 roll dup 4 -2 roll put}forall put definefont}ifelse}bdf
userdict begin /BDFontDict 20 dict def end
BDFontDict begin
/bu{}def
/bn{}def
/setTxMode{av 70 ge{pop}if pop}def
/gm{m}def
/show{pop}def
/gr{pop}def
/fnt{pop pop pop}def
/fs{pop}def
/fz{pop}def
/lin{pop pop}def
end
/AVec 256 array def
AVec 0 /Helvetica findfont
/Encoding get 0 256 getinterval putinterval
/ANSIPatch[
16#0/grave 16#1/acute 16#2/circumflex 16#3/tilde 16#4/macron 16#5/breve
16#6/dotaccent 16#7/dieresis 16#8/ring 16#9/cedilla 16#A/hungarumlaut
16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle 16#60/grave
16#7C/bar 16#82/quotesinglbase 16#83/florin 16#84/quotedblbase 16#85
/ellipsis 16#86/dagger 16#87/daggerdbl 16#89/perthousand 16#8A/Scaron
16#8B/guilsinglleft 16#8C/OE 16#91/quoteleft 16#92/quoteright 16#93
/quotedblleft 16#94/quotedblright 16#95/bullet 16#96/endash 16#97/emdash
16#99/trademark 16#9A/scaron 16#9B/guilsinglright 16#9C/oe
16#9F/Ydieresis 16#A0/space 16#A4/currency 16#A6/brokenbar
16#A7/section 16#A8/dieresis 16#A9/copyright 16#AA/ordfeminine 16#AB/guillemotleft
16#AC/logicalnot 16#AD/hyphen 16#AE/registered 16#AF/macron 16#B0/degree
16#B1/plusminus 16#B2/twosuperior 16#B3/threesuperior 16#B4/acute 16#B5/mu
16#B6/paragraph 16#B7/periodcentered 16#B8/cedilla 16#B9/onesuperior
16#BA/ordmasculine 16#BB/guillemotright 16#BC/onequarter 16#BD/onehalf
16#BE/threequarters 16#BF/questiondown 16#C0/Agrave 16#C1/Aacute 16#C2/Acircumflex
16#C3/Atilde 16#C4/Adieresis 16#C5/Aring 16#C6/AE 16#C7/Ccedilla 16#C8/Egrave
16#C9/Eacute 16#CA/Ecircumflex 16#CB/Edieresis 16#CC/Igrave 16#CD/Iacute
16#CE/Icircumflex 16#CF/Idieresis 16#D0/Eth 16#D1/Ntilde 16#D2/Ograve
16#D3/Oacute 16#D4/Ocircumflex 16#D5/Otilde 16#D6/Odieresis 16#D7/multiply
16#D8/Oslash 16#D9/Ugrave 16#DA/Uacute 16#DB/Ucircumflex 16#DC/Udieresis
16#DD/Yacute 16#DE/Thorn 16#DF/germandbls 16#E0/agrave 16#E1/aacute
16#E2/acircumflex 16#E3/atilde 16#E4/adieresis 16#E5/aring 16#E6/ae
16#E7/ccedilla 16#E8/egrave 16#E9/eacute 16#EA/ecircumflex 16#EB/edieresis
16#EC/igrave 16#ED/iacute 16#EE/icircumflex 16#EF/idieresis 16#F0/eth
16#F1/ntilde 16#F2/ograve 16#F3/oacute 16#F4/ocircumflex 16#F5/otilde
16#F6/odieresis 16#F7/divide 16#F8/oslash 16#F9/ugrave 16#FA/uacute
16#FB/ucircumflex 16#FC/udieresis 16#FD/yacute 16#FE/thorn 16#FF/ydieresis
] def
127 1 159 { AVec exch/bullet put } for
ANSIPatch aload pop ANSIPatch length 2 idiv{AVec 3 1 roll put}repeat
/DoPatch { dup /CharStrings known
{ setfont
0 1 255 { dup
currentfont
/Encoding get
exch get
currentfont /CharStrings get
exch known
{pop} {currentfont /Encoding get exch /bullet put} ifelse
} for
} {pop} ifelse
} def
/fps{
currentflat
exch
dup 0 le{pop 1}if
{
dup setflat 3 index stopped
{1.3 mul dup 3 index gt{pop setflat pop pop stop}if}
{exit}
ifelse
}loop
pop setflat pop pop
}bdf
/fp{100 currentflat fps}bdf
/clipper{clip}bdf
/W{/clipper load 100 clipflatness fps}bdf
end%. FreeHandDict
end%. FHIODict
%%EndProcSet
%%EndProlog
%%BeginSetup
FHIODict begin
FreeHandDict begin
94.9639 490.5419 527.5333 820.2933 storerect rectpath clip newpath
/onlyk{false}ndf
/ccmyk{dup 5 -1 roll sub 0 max exch}ndf
/setcmykcolor{1 exch sub ccmyk ccmyk ccmyk pop setrgbcolor}ndf
/setcmykcoloroverprint{4{dup -1 eq{pop 0}if 4 1 roll}repeat setcmykcolor}ndf
/findcmykcustomcolor{5 /packedarray where{pop packedarray}{array astore readonly}ifelse}ndf
/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}ndf
/setseparationgray{1 exch sub dup dup dup setcmykcolor}ndf
/setoverprint{pop}ndf
/currentoverprint false ndf
/colorimage{pop pop
[5 -1 roll/exec cvx 6 -1 roll/exec cvx 7 -1 roll/exec cvx 8 -1 roll/exec cvx
/cmykbufs2gray cvx]cvx image}
%. version 47.1 on Linotronic of Postscript defines colorimage incorrectly (rgb model only)
version cvr 47.1 le isLino and{userdict begin bdf end}{ndf}ifelse
/customcolorimage{
colorexists
{
aload pop pop 4 array astore
setimagecmyk
currentcolortransfer
{ik mul ik sub 1 add}concatprocs 4 1 roll
{iy mul iy sub 1 add}concatprocs 4 1 roll
{im mul im sub 1 add}concatprocs 4 1 roll
{ic mul ic sub 1 add}concatprocs 4 1 roll
setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{invbuf dup length magentabuf length ne
{dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def}if
dup magentabuf copy yellowbuf copy blackbuf copy pop}concatprocs
{magentabuf}{yellowbuf}{blackbuf}true 4 colorimage
}
{
pop image
}
ifelse
}ndf
/separationimage{image}ndf
/newcmykcustomcolor{6 /packedarray where{pop packedarray}{array astore readonly}ifelse}ndf
/inkoverprint false ndf
/setinkoverprint{pop}ndf
/overprintprocess{pop}ndf
/setspotcolor
{spots exch get 0 5 getinterval exch setcustomcolor}ndf
/currentcolortransfer{currenttransfer dup dup dup}ndf
/setcolortransfer{systemdict begin settransfer end pop pop pop}ndf
/getcmyk {
dup length 4 eq
{aload pop}
{aload pop spots exch get 0 4 getinterval aload pop 4
{4 index mul 4 1 roll}repeat 5 -1 roll pop} ifelse
}bdf
/setimagecmyk{
getcmyk /ik xdf /iy xdf /im xdf /ic xdf
}ndf
/autospread{pop}ndf
/fhsetspreadsize{pop}ndf
/strokeopf false def
/fillopf false def
/R{0 ne /strokeopf xdf}bdf
/O{0 ne /fillopf xdf}bdf
/filler{fill}bdf
/F{fc fhsetcolor fillopf setoverprint false autospread
gsave /filler load fp grestore false setoverprint}bdf
/f{closepath F}bdf
/S{sc fhsetcolor strokeopf setoverprint true autospread {stroke}fp false setoverprint}bdf
/s{closepath S}bdf
/B{fc fhsetcolor fillopf setoverprint gsave /filler load fp grestore
sc fhsetcolor strokeopf setoverprint true autospread {stroke}fp false setoverprint}bdf
/b{closepath B}bdf
/setcolorscreen where{pop}{/setcolorscreen{setscreen pop pop pop pop pop pop pop pop pop}bdf}ifelse
/fhsetcolor{dup length 4 eq
{aload overprintprocess setcmykcolor}
{aload 1 get spots exch get 5 get setinkoverprint setspotcolor}
ifelse
}ndf
/settextcolor{
dup fhsetcolor
textblackopf
{
dup length 4 eq
{onlyk{3 get 1.0 eq{true setinkoverprint}if}{pop}ifelse}
{pop}
ifelse
}
{pop}ifelse
}ndf
/ka{/fc xdf}bdf
/Ka{/sc xdf}bdf
/xa{/fc xdf} bdf
/Xa{/sc xdf} bdf
/bc2[0 0]def
/bc4[0 0 0 0]def
/absmax{2 copy abs exch abs gt{exch}if pop}bdf
/calcstep
{ {calcgraysteps}{maxsteps}ifelse
tc1 length 4 eq
{
0 1 3
{tc1 1 index get
tc2 3 -1 roll get
sub
}for
absmax absmax absmax
}
{
bc2 tc1 1 get 1 exch put
tc1 gettint tc2 gettint
sub abs
}
ifelse
mul abs round dup 0 eq{pop 1}if
dup /numsteps xdf 1 sub dup 0 eq{pop 1}if /numsteps1 xdf
}bdf
/cblend{
tc1 length 4 eq
{
0 1 3
{bc4 exch
tc1 1 index get
tc2 2 index get
1 index sub
frac mul add put
}for bc4
}
{
bc2
tc1 gettint
tc2 gettint
1 index sub
frac mul add
puttint bc2
}
ifelse
fhsetcolor
}bdf
/logtaper{/frac frac 9 mul 1 add log def}bdf
FHIODict begin
/origmtx matrix currentmatrix def
/iminv false def
/invbuf{0 1 2 index length 1 sub{dup 2 index exch get 255 exch sub 2 index 3 1 roll put}for}bdf
/cmykbufs2gray{
dup length 0 1 3 -1 roll 1 sub
{4 index 1 index get
4 index 2 index get
4 index 3 index get
4 index 4 index get
255 exch sub ccmyk ccmyk ccmyk pop 5 mul exch 45 mul add exch 14 mul add -6 bitshift
2 index 3 1 roll put}for
4 1 roll pop pop pop
}bdf
end
/textopf false def
/textblackopf true def
/curtextmtx{}def
/otw .25 def
/msf{dup/curtextmtx xdf makefont setfont}bdf
/makesetfont/msf load def
/curtextheight{.707104 .707104 curtextmtx dtransform
dup mul exch dup mul add sqrt}bdf
/ta{1 index
{tempstr 0 2 index put tempstr 2 index
gsave exec grestore
tempstr stringwidth rmoveto
5 index eq{6 index 6 index rmoveto}if
3 index 3 index rmoveto
}forall 7{pop}repeat}bdf
/sts{settextcolor textopf setoverprint/ts{awidthshow}def exec false setoverprint}bdf
/stol{/xt currentlinewidth def
setlinewidth settextcolor textopf setoverprint newpath
/ts{{false charpath stroke}ta}def exec
false setoverprint xt setlinewidth}bdf
/currentpacking where{pop false setpacking}if
/spots[1 0 0 0 (Process Cyan) false newcmykcustomcolor
0 1 0 0 (Process Magenta) false newcmykcustomcolor
0 0 1 0 (Process Yellow) false newcmykcustomcolor
0 0 0 1 (Process Black) false newcmykcustomcolor
0 0 0 0  (Wit) false
newcmykcustomcolor
]def
%%EndSetup
%%IncludeFont: Symbol
0 dict dup begin
end
/f0 /Symbol FF def
[] 0 d
3.8637 M
1 w
0 j
0 J
0 O
0 R
0 i
false eomode
[0 0 0 1] Ka
[0 0 0 1] ka
vms
u
u
215.7246 644.178 m
211.818 630.5536 L
1.5001 w
S
220.5835 635.4124 m
206.959 639.3191 L
S
U
u
236.0996 653.928 m
232.193 640.3036 L
S
240.9585 645.1624 m
227.334 649.0691 L
S
U
u
256.7246 663.303 m
252.818 649.6786 L
S
261.5835 654.5374 m
247.959 658.4441 L
S
U
u
277.0996 673.053 m
273.193 659.4286 L
S
281.9585 664.2874 m
268.334 668.1941 L
S
U
429.8866 693.9362 m
452.254 648.0762 L
1 w
S
220.3842 570.8014 m
200.5531 615.3421 L
0.5 w
S
true eomode
200.5531 615.3421 m
198.626 612.2948 L
198.1127 620.8233 L
204.1073 614.7352 L
200.5531 615.3421 L
f
n
false eomode
204.2352 618.2227 m
222.6828 576.7895 L
S
true eomode
222.6828 576.7895 m
224.61 579.8368 L
225.1232 571.3082 L
219.1287 577.3964 L
222.6828 576.7895 L
f
n
false eomode
220.3842 570.8014 m
200.5531 615.3421 L
1 w
S
203.7741 619.2585 m
222.6828 576.7895 L
S
237.0322 582.4595 m
233.5474 586.5811 231.7707 589.1104 229.0951 593.7981 C
226.4466 598.4385 224.3552 601.0091 223.4258 606.2706 C
222.4996 611.514 221.8065 615.319 224.5597 619.8769 C
226.8461 623.6621 229.7255 624.6053 233.6306 626.6801 C
236.9672 628.4529 239.3251 628.3858 242.7015 630.0817 C
245.0056 631.239 246.1098 632.2441 248.3708 633.4833 C
257.4483 638.4582 264.6173 636.9413 273.3158 642.5542 C
281.0518 647.546 284.3385 651.9426 290.25 659 C
293.6108 663.0122 295.5967 665.2619 298.2608 669.7669 C
300.9803 674.3658 300.8171 677.8969 303.9301 682.2394 C
309.2913 689.718 315.2003 691.3084 323.2057 695.8457 C
333.2082 701.5149 339.6698 703.1041 350.4184 707.1843 C
371.2077 715.0761 400.3456 745.9709 404.8438 724.1923 C
406.4762 716.289 404.448 711.2717 401.4423 703.7827 C
400.3967 701.1777 399.7808 699.6873 398.2677 697.3228 C
394.0331 690.7055 386.3128 691.531 382.6772 684.5669 C
377.5356 674.7181 380.2476 666.0048 385.5118 656.2205 C
395.4852 637.6835 430.4716 662.3129 437.7258 642.5542 C
440.3212 635.485 439.6599 630.7668 438.8597 623.2785 C
437.4899 610.4592 434.4476 602.7269 426.3872 592.6642 C
418.8665 583.2751 412.5078 579.2388 401.4423 574.5224 C
384.0189 567.0962 371.0255 578.1412 352.9134 572.5984 C
341.0943 568.9815 336.0844 562.9098 324.5669 558.4252 C
307.316 551.7081 296.5119 543.7857 278.375 547.5 C
257.6872 551.7367 244.6199 562.7529 237.0322 582.4595 C
[0 0 0 0.3] ka
b
115.7087 687.9086 m
115.7087 500.8213 L
S
100.9687 539.3727 m
442.2613 539.3726 L
S
vmrs
u
197.6447 643.1047 m
403.1712 738.9453 L
470.2596 595.0767 L
264.7331 499.2361 L
197.6447 643.1047 L
s
U
207.2318 622.5508 m
412.7583 718.39 L
S
216.8158 601.9982 m
422.3422 697.8374 L
S
226.3997 581.4455 m
431.9261 677.2847 L
S
235.9836 560.8929 m
441.51 656.7321 L
S
245.5675 540.3402 m
451.094 636.1795 L
S
255.1514 519.7876 m
460.6779 615.6268 L
S
218.2005 652.6874 m
285.288 508.8189 L
S
238.7532 662.2713 m
305.8406 518.4028 L
S
259.3058 671.8552 m
326.3933 527.9867 L
S
279.8585 681.4391 m
346.9459 537.5706 L
S
300.4111 691.0231 m
367.4986 547.1546 L
S
320.9638 700.607 m
388.0512 556.7385 L
S
341.5164 710.1909 m
408.6038 566.3224 L
S
362.0691 719.7748 m
429.1565 575.9063 L
S
382.6217 729.3587 m
449.7091 585.4903 L
S
vmrs
%%IncludeFont: Times-Roman
AVec 256 array copy
/f1 /|______Times-Roman dup RF findfont def
f1 DoPatch
{
f1 [10.0002 0 0 10.0002 0 0] makesetfont
149.7248 649.3573 m
0 0 32 0 0 (\(x) ts
f1 [7.0001 0 0 7.0001 0 0] makesetfont
158.0617 647.3573 m
0 0 32 0 0 (UL) ts
f1 [10.0002 0 0 10.0002 0 0] makesetfont
167.3899 649.3573 m
0 0 32 0 0 (,y) ts
f1 [7.0001 0 0 7.0001 0 0] makesetfont
174.9065 647.3573 m
0 0 32 0 0 (UL) ts
f1 [10.0002 0 0 10.0002 0 0] makesetfont
184.2346 649.3573 m
0 0 32 0 0 (\)) ts
} 
[0 0 0 1]
sts
u
193.9454 643.688 m
193.9454 645.5667 195.4683 647.0896 197.347 647.0896 C
199.2256 647.0896 200.7486 645.5667 200.7486 643.688 C
200.7486 641.8094 199.2256 640.2865 197.347 640.2865 C
195.4683 640.2865 193.9454 641.8094 193.9454 643.688 C
b
U
vmrs
%%IncludeFont: Times-Roman
AVec 256 array copy
/f1 /|______Times-Roman dup RF findfont def
f1 DoPatch
{
f1 [10.0002 0 0 10.0002 0 0] makesetfont
216.6227 498.5536 m
0 0 32 0 0 (\(x) ts
f1 [7.0001 0 0 7.0001 0 0] makesetfont
224.9596 496.5536 m
0 0 32 0 0 (LL) ts
f1 [10.0002 0 0 10.0002 0 0] makesetfont
233.4961 498.5536 m
0 0 32 0 0 (,y) ts
f1 [7.0001 0 0 7.0001 0 0] makesetfont
241.0128 496.5536 m
0 0 32 0 0 (LL) ts
f1 [10.0002 0 0 10.0002 0 0] makesetfont
249.5493 498.5536 m
0 0 32 0 0 (\)) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
AVec 256 array copy
/f1 /|______Times-Roman dup RF findfont def
f1 DoPatch
{
f1 [10.0002 0 0 10.0002 0 0] makesetfont
471.7417 594.9319 m
0 0 32 0 0 (\(x) ts
f1 [7.0001 0 0 7.0001 0 0] makesetfont
480.0787 592.9319 m
0 0 32 0 0 (LR) ts
f1 [10.0002 0 0 10.0002 0 0] makesetfont
489.0189 594.9319 m
0 0 32 0 0 (,y) ts
f1 [7.0001 0 0 7.0001 0 0] makesetfont
496.5355 592.9319 m
0 0 32 0 0 (LR) ts
f1 [10.0002 0 0 10.0002 0 0] makesetfont
505.4757 594.9319 m
0 0 32 0 0 (\)) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
AVec 256 array copy
/f1 /|______Times-Roman dup RF findfont def
f1 DoPatch
{
f1 [10.0002 0 0 10.0002 0 0] makesetfont
407.1116 743.4679 m
0 0 32 0 0 (\(x) ts
f1 [7.0001 0 0 7.0001 0 0] makesetfont
415.4485 741.4679 m
0 0 32 0 0 (UR) ts
f1 [10.0002 0 0 10.0002 0 0] makesetfont
425.1803 743.4679 m
0 0 32 0 0 (,y) ts
f1 [7.0001 0 0 7.0001 0 0] makesetfont
432.697 741.4679 m
0 0 32 0 0 (UR) ts
f1 [10.0002 0 0 10.0002 0 0] makesetfont
442.4288 743.4679 m
0 0 32 0 0 (\)) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
AVec 256 array copy
/f1 /|______Times-Roman dup RF findfont def
f1 DoPatch
{
f1 [0 10.0002 -10.0002 0 0 0] makesetfont
105.504 548.4435 m
0 0 32 0 0 (y axis real coordinate system) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
AVec 256 array copy
/f1 /|______Times-Roman dup RF findfont def
f1 DoPatch
{
f1 [10.0002 0 0 10.0002 0 0] makesetfont
123.6458 528.034 m
0 0 32 0 0 (x axis real coordinate ) ts
123.6458 518.0339 m
0 0 32 0 0 (system) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
AVec 256 array copy
/f1 /|______Times-Roman dup RF findfont def
f1 DoPatch
{
f1 [0 10.0002 -10.0002 0 0 0] makesetfont
134.9844 550.7112 m
0 0 32 0 0 (y increases to top\/bottom) ts
} 
[0 0 0 1]
sts
119.1103 572.2547 m
119.1103 621.0107 L
0.5 w
S
true eomode
119.1103 621.0107 m
116.1103 619.0107 L
119.1103 627.0107 L
122.1103 619.0107 L
119.1103 621.0107 L
f
n
false eomode
123.3623 573.6719 m
123.3623 622.428 L
1 w
S
123.6458 622.1446 m
123.6458 576.7901 L
0.5 w
S
true eomode
123.6458 576.7901 m
126.6458 578.7901 L
123.6458 570.7901 L
120.6458 578.7901 L
123.6458 576.7901 L
f
n
false eomode
119.0551 620.7874 m
119.0551 571.1811 L
1 w
S
263.4471 679.5648 m
308.6629 700.6495 L
0.5 w
S
true eomode
308.6629 700.6495 m
305.5824 702.5231 L
314.1008 703.1853 L
308.1182 697.0853 L
308.6629 700.6495 L
f
n
false eomode
262.4194 679.0856 m
308.6629 700.6495 L
S
vmrs
%%IncludeFont: Times-Roman
AVec 256 array copy
/f1 /|______Times-Roman dup RF findfont def
f1 DoPatch
{
f1 [8.7006 4.0573 -4.0573 8.7006 0 0] makesetfont
251.2504 678.8844 m
0 0 32 0 0 (number of columns) ts
} 
[0 0 0 1]
sts
430.3836 692.9171 m
452.254 648.0762 L
0.5 w
S
true eomode
452.254 648.0762 m
454.0736 651.189 L
454.8843 642.6834 L
448.6808 648.5587 L
452.254 648.0762 L
f
n
vmrs
%%IncludeFont: Times-Roman
AVec 256 array copy
/f1 /|______Times-Roman dup RF findfont def
f1 DoPatch
{
f1 [4.3841 -8.9888 8.9888 4.3841 0 0] makesetfont
431.9744 699.996 m
0 0 32 0 0 (number of rows) ts
} 
[0 0 0 1]
sts
S
309.2241 511.5847 m
329.7767 521.1687 L
S
307.7865 514.6676 m
310.6617 508.5019 L
S
328.3392 524.2516 m
331.2143 518.0858 L
S
vmrs
%%IncludeFont: Times-Roman
AVec 256 array copy
/f1 /|______Times-Roman dup RF findfont def
f1 DoPatch
{
f1 [9.064 4.2267 -4.2267 9.064 0 0] makesetfont
307.2997 496.9281 m
0 0 32 0 0 (cell length) ts
} 
[0 0 0 1]
sts
203.0163 642.5542 m
255.174 667.4992 L
267.6465 641.4203 L
237.0322 640.2865 L
203.0163 642.5542 L
[0 0 0 0] ka
[0 0 0 0] Ka
b
167.8666 643.688 m
261.9771 643.688 L
[0 0 0 1] Ka
[1 1 ] 0 d
S
225.6935 656.1605 m
226.578 653.9495 227.2559 652.7656 227.9613 650.4912 C
228.5014 648.7498 228.9502 647.7732 229.0951 645.9558 C
229.1654 645.0742 229.0951 644.5724 229.0951 643.688 C
[] 0 d
S
vmrs
%%IncludeFont: Times-Roman
AVec 256 array copy
/f1 /|______Times-Roman dup RF findfont def
f1 DoPatch
{
f1 [10.0002 0 0 10.0002 0 0] makesetfont
232.4967 649.3574 m
0 0 32 0 0 (angle) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
AVec 256 array copy
/f1 /|______Times-Roman dup RF findfont def
f1 DoPatch
{
f1 [-4.0675 9.1356 -9.1356 -4.0675 0 0] makesetfont
220.445 556.0303 m
0 0 32 0 0 (y incr. to top\/bottom) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
AVec 256 array copy
/f1 /|______Times-Roman dup RF findfont def
f1 DoPatch
{
f1 [10 0 0 10 0 0] makesetfont
311.811 746.9291 m
0 0 32 0 0 (STUDY AREA) ts
} 
[0 0 0 1]
sts
342.9921 735.5905 m
338.7402 650.5512 L
2 w
S
true eomode
338.7402 650.5512 m
346.1541 654.9515 L
337.9892 636.2239 L
331.8268 655.7024 L
338.7402 650.5512 L
f
n
u
false eomode
272.2246 521.178 m
268.318 507.5536 L
1.5001 w
S
277.0835 512.4124 m
263.459 516.3191 L
S
U
u
292.5996 530.928 m
288.693 517.3036 L
S
297.4585 522.1624 m
283.834 526.0691 L
S
U
u
313.2246 540.303 m
309.318 526.6786 L
S
318.0835 531.5374 m
304.459 535.4441 L
S
U
u
333.5996 550.053 m
329.693 536.4286 L
S
338.4585 541.2874 m
324.834 545.1941 L
S
U
u
457.0996 607.803 m
453.193 594.1786 L
S
461.9585 599.0374 m
448.334 602.9441 L
S
U
u
418.7246 689.553 m
414.818 675.9286 L
S
423.5835 680.7874 m
409.959 684.6941 L
S
U
vmrs
u
398.0996 680.303 m
394.193 666.6786 L
1.5001 w
S
402.9585 671.5374 m
389.334 675.4441 L
S
U
u
354.3496 559.303 m
350.443 545.6786 L
S
359.2085 550.5374 m
345.584 554.4441 L
S
U
u
262.3496 542.428 m
258.443 528.8036 L
S
267.2085 533.6624 m
253.584 537.5691 L
S
U
382.5 514 m
366.2402 534.5512 L
2 w
S
true eomode
366.2402 534.5512 m
363.5317 526.3661 L
357.4072 545.8568 L
374.8373 535.1991 L
366.2402 534.5512 L
f
n
vmrs
%%IncludeFont: Times-Roman
AVec 256 array copy
/f1 /|______Times-Roman dup RF findfont def
f1 DoPatch
{
f1 [10 0 0 10 0 0] makesetfont
374.811 501.9291 m
0 0 32 0 0 (missing value) ts
} 
[0 0 0 1]
sts
U
vmr
%%Trailer
end             % FreeHandDict
end             % FHIODict
