%!PS-Adobe-2.0 EPSF-1.2
%%Creator: FreeHand
%%Title: STACKREL.FH
%%CreationDate: 10-08-95 14:37:51
%%BoundingBox:51.224 565.7219 512.7362 790.0648
%%DocumentProcSets: FreeHand_header 3 0
%%DocumentSuppliedProcSets: FreeHand_header 3 0
%%ColorUsage: Color
%%DocumentFonts: Symbol
%%+Times-Roman
%%DocumentNeededFonts: Symbol
%%+Times-Roman
%%EndComments
%%BeginProcSet: FreeHand_header 3 0
/FHIODict 30 dict def
FHIODict begin
/bdf{bind def}bind def
/d{setdash}bdf
/h{closepath}bdf
/H{}bdf
/J{setlinecap}bdf
/j{setlinejoin}bdf
/M{setmiterlimit}bdf
/n{newpath}bdf
/N{newpath}bdf
/q{gsave}bdf
/Q{grestore}bdf
/w{setlinewidth}bdf
/u{}bdf
/U{}bdf
/OB{pop pop pop pop pop pop}bind def
/SB{pop pop pop pop}bind def
/sepdef{
dup where not
{
FreeHandSepDict
}
if
3 1 roll exch put
}bdf
/`
{ false setoverprint
end%. FreeHandDict
/-save0- save def
pop pop pop pop pop
concat
userdict begin
/showpage {} def
0 setgray 0 setlinecap 1 setlinewidth
0 setlinejoin 10 setmiterlimit [] 0 setdash newpath
/languagelevel where {pop languagelevel 1 ne{false setstrokeadjust}if}if
} bdf
/~
{ end
-save0- restore
FreeHandDict begin
}bdf
/FreeHandDict 223 dict def
FreeHandDict begin
/currentpacking where{pop true setpacking}if
/xdf{exch def}bdf
/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdf
/min{2 copy gt{exch}if pop}bdf
/max{2 copy lt{exch}if pop}bdf
/isLino statusdict /product get (Lino) anchorsearch{pop pop true}{pop false}ifelse def
/dr{transform .25 sub round .25 add
exch .25 sub round .25 add exch itransform}bdf
/C{dr curveto}bdf
/L{dr lineto}bdf
/m{dr moveto}bdf
/printerRes
gsave
matrix defaultmatrix setmatrix
72 72 dtransform
abs exch abs
max
grestore
def
/maxsteps 256 def
/calcgraysteps {
currentscreen pop exch
printerRes exch div exch
2 copy
sin mul round dup mul
3 1 roll
cos mul round dup mul
add 1 add
dup maxsteps gt {pop maxsteps} if
} bdf
/bottom -0 def
/delta -0 def
/frac -0 def
/left -0 def
/numsteps -0 def
/numsteps1 -0 def
/radius -0 def
/right -0 def
/top -0 def
/xt -0 def
/yt -0 def
/df currentflat def
/tempstr 1 string def
/clipflatness currentflat def
/inverted?
0 currenttransfer exec .5 ge def
/level2
/languagelevel where {pop languagelevel 1 ne}{false}ifelse def
/colorexists
level2
{
statusdict/processcolors known
{statusdict/processcolors get exec}{1}ifelse
4 eq def
}
{systemdict/setcmykcolor known def}ifelse
/tc1 [0 0 0 1] def
/tc2 [0 0 0 1] def
/fc [0 0 0 1] def
/sc [0 0 0 1] def
/concatprocs{
/packedarray where
{pop dup type /packedarraytype eq 2 index type /packedarraytype eq or}{false}ifelse
{
/proc2 exch cvlit def /proc1 exch cvlit def
proc1 aload pop proc2 aload pop
proc1 length proc2 length add packedarray cvx
}
{
/proc2 exch cvlit def /proc1 exch cvlit def
/newproc proc1 length proc2 length add array def
newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval
newproc cvx
}ifelse
}bdf
/storerect{/top xdf/right xdf/bottom xdf/left xdf}bdf
/rectpath{newpath left bottom m left top L
right top L right bottom L closepath}bdf
/i{dup 0 eq
{pop df dup}
{dup} ifelse
/clipflatness xdf setflat
}bdf
version cvr 38.0 le
{/setrgbcolor{
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
setrgbcolor}bdf}if
/gettint{0 get}bdf
/puttint{0 exch put}bdf
/vms {/vmsv save def} bdf
/vmr {vmsv restore} bdf
/vmrs{vmsv restore /vmsv save def}bdf
/eomode{
{/filler /eofill load def /clipper /eoclip load def}
{/filler /fill load def /clipper /clip load def}
ifelse
}bdf
/CD{/NF exch def{exch dup/FID ne 1 index/UniqueID ne and{exch NF 3 1 roll put}
{pop pop}ifelse}forall NF}bdf
/MN{1 index length/Len exch def
dup length Len add string dup
Len 4 -1 roll putinterval dup 0 4 -1 roll putinterval}bdf
/RC{4 -1 roll /ourvec xdf 256 string cvs(|______)anchorsearch
{1 index MN cvn/NewN exch def cvn
findfont dup maxlength dict CD dup/FontName NewN put dup
/Encoding ourvec put NewN exch definefont pop}{pop}ifelse}bdf
/RF{dup FontDirectory exch known{pop 3 -1 roll pop}{RC}ifelse}bdf
/FF{dup 256 string cvs(|______)exch MN cvn dup FontDirectory exch known
{exch pop findfont 3 -1 roll pop}{pop dup findfont dup maxlength dict CD dup dup
/Encoding exch /Encoding get 256 array copy 7 -1 roll {3 -1 roll dup 4 -2 roll put}forall put definefont}ifelse}bdf
userdict begin /BDFontDict 20 dict def end
BDFontDict begin
/bu{}def
/bn{}def
/setTxMode{av 70 ge{pop}if pop}def
/gm{m}def
/show{pop}def
/gr{pop}def
/fnt{pop pop pop}def
/fs{pop}def
/fz{pop}def
/lin{pop pop}def
end
/AVec 256 array def
AVec 0 /Helvetica findfont
/Encoding get 0 256 getinterval putinterval
/ANSIPatch[
16#0/grave 16#1/acute 16#2/circumflex 16#3/tilde 16#4/macron 16#5/breve
16#6/dotaccent 16#7/dieresis 16#8/ring 16#9/cedilla 16#A/hungarumlaut
16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle 16#60/grave
16#7C/bar 16#82/quotesinglbase 16#83/florin 16#84/quotedblbase 16#85
/ellipsis 16#86/dagger 16#87/daggerdbl 16#89/perthousand 16#8A/Scaron
16#8B/guilsinglleft 16#8C/OE 16#91/quoteleft 16#92/quoteright 16#93
/quotedblleft 16#94/quotedblright 16#95/bullet 16#96/endash 16#97/emdash
16#99/trademark 16#9A/scaron 16#9B/guilsinglright 16#9C/oe
16#9F/Ydieresis 16#A0/space 16#A4/currency 16#A6/brokenbar
16#A7/section 16#A8/dieresis 16#A9/copyright 16#AA/ordfeminine 16#AB/guillemotleft
16#AC/logicalnot 16#AD/hyphen 16#AE/registered 16#AF/macron 16#B0/degree
16#B1/plusminus 16#B2/twosuperior 16#B3/threesuperior 16#B4/acute 16#B5/mu
16#B6/paragraph 16#B7/periodcentered 16#B8/cedilla 16#B9/onesuperior
16#BA/ordmasculine 16#BB/guillemotright 16#BC/onequarter 16#BD/onehalf
16#BE/threequarters 16#BF/questiondown 16#C0/Agrave 16#C1/Aacute 16#C2/Acircumflex
16#C3/Atilde 16#C4/Adieresis 16#C5/Aring 16#C6/AE 16#C7/Ccedilla 16#C8/Egrave
16#C9/Eacute 16#CA/Ecircumflex 16#CB/Edieresis 16#CC/Igrave 16#CD/Iacute
16#CE/Icircumflex 16#CF/Idieresis 16#D0/Eth 16#D1/Ntilde 16#D2/Ograve
16#D3/Oacute 16#D4/Ocircumflex 16#D5/Otilde 16#D6/Odieresis 16#D7/multiply
16#D8/Oslash 16#D9/Ugrave 16#DA/Uacute 16#DB/Ucircumflex 16#DC/Udieresis
16#DD/Yacute 16#DE/Thorn 16#DF/germandbls 16#E0/agrave 16#E1/aacute
16#E2/acircumflex 16#E3/atilde 16#E4/adieresis 16#E5/aring 16#E6/ae
16#E7/ccedilla 16#E8/egrave 16#E9/eacute 16#EA/ecircumflex 16#EB/edieresis
16#EC/igrave 16#ED/iacute 16#EE/icircumflex 16#EF/idieresis 16#F0/eth
16#F1/ntilde 16#F2/ograve 16#F3/oacute 16#F4/ocircumflex 16#F5/otilde
16#F6/odieresis 16#F7/divide 16#F8/oslash 16#F9/ugrave 16#FA/uacute
16#FB/ucircumflex 16#FC/udieresis 16#FD/yacute 16#FE/thorn 16#FF/ydieresis
] def
127 1 159 { AVec exch/bullet put } for
ANSIPatch aload pop ANSIPatch length 2 idiv{AVec 3 1 roll put}repeat
/DoPatch { dup /CharStrings known
{ setfont
0 1 255 { dup
currentfont
/Encoding get
exch get
currentfont /CharStrings get
exch known
{pop} {currentfont /Encoding get exch /bullet put} ifelse
} for
} {pop} ifelse
} def
/fps{
currentflat
exch
dup 0 le{pop 1}if
{
dup setflat 3 index stopped
{1.3 mul dup 3 index gt{pop setflat pop pop stop}if}
{exit}
ifelse
}loop
pop setflat pop pop
}bdf
/fp{100 currentflat fps}bdf
/clipper{clip}bdf
/W{/clipper load 100 clipflatness fps}bdf
end%. FreeHandDict
end%. FHIODict
%%EndProcSet
%%EndProlog
%%BeginSetup
FHIODict begin
FreeHandDict begin
51.224 565.7219 512.7362 790.0648 storerect rectpath clip newpath
/onlyk{false}ndf
/ccmyk{dup 5 -1 roll sub 0 max exch}ndf
/setcmykcolor{1 exch sub ccmyk ccmyk ccmyk pop setrgbcolor}ndf
/setcmykcoloroverprint{4{dup -1 eq{pop 0}if 4 1 roll}repeat setcmykcolor}ndf
/findcmykcustomcolor{5 /packedarray where{pop packedarray}{array astore readonly}ifelse}ndf
/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}ndf
/setseparationgray{1 exch sub dup dup dup setcmykcolor}ndf
/setoverprint{pop}ndf
/currentoverprint false ndf
/colorimage{pop pop
[5 -1 roll/exec cvx 6 -1 roll/exec cvx 7 -1 roll/exec cvx 8 -1 roll/exec cvx
/cmykbufs2gray cvx]cvx image}
%. version 47.1 on Linotronic of Postscript defines colorimage incorrectly (rgb model only)
version cvr 47.1 le isLino and{userdict begin bdf end}{ndf}ifelse
/customcolorimage{
colorexists
{
aload pop pop 4 array astore
setimagecmyk
currentcolortransfer
{ik mul ik sub 1 add}concatprocs 4 1 roll
{iy mul iy sub 1 add}concatprocs 4 1 roll
{im mul im sub 1 add}concatprocs 4 1 roll
{ic mul ic sub 1 add}concatprocs 4 1 roll
setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{invbuf dup length magentabuf length ne
{dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def}if
dup magentabuf copy yellowbuf copy blackbuf copy pop}concatprocs
{magentabuf}{yellowbuf}{blackbuf}true 4 colorimage
}
{
pop image
}
ifelse
}ndf
/separationimage{image}ndf
/newcmykcustomcolor{6 /packedarray where{pop packedarray}{array astore readonly}ifelse}ndf
/inkoverprint false ndf
/setinkoverprint{pop}ndf
/overprintprocess{pop}ndf
/setspotcolor
{spots exch get 0 5 getinterval exch setcustomcolor}ndf
/currentcolortransfer{currenttransfer dup dup dup}ndf
/setcolortransfer{systemdict begin settransfer end pop pop pop}ndf
/getcmyk {
dup length 4 eq
{aload pop}
{aload pop spots exch get 0 4 getinterval aload pop 4
{4 index mul 4 1 roll}repeat 5 -1 roll pop} ifelse
}bdf
/setimagecmyk{
getcmyk /ik xdf /iy xdf /im xdf /ic xdf
}ndf
/autospread{pop}ndf
/fhsetspreadsize{pop}ndf
/strokeopf false def
/fillopf false def
/R{0 ne /strokeopf xdf}bdf
/O{0 ne /fillopf xdf}bdf
/filler{fill}bdf
/F{fc fhsetcolor fillopf setoverprint false autospread
gsave /filler load fp grestore false setoverprint}bdf
/f{closepath F}bdf
/S{sc fhsetcolor strokeopf setoverprint true autospread {stroke}fp false setoverprint}bdf
/s{closepath S}bdf
/B{fc fhsetcolor fillopf setoverprint gsave /filler load fp grestore
sc fhsetcolor strokeopf setoverprint true autospread {stroke}fp false setoverprint}bdf
/b{closepath B}bdf
/setcolorscreen where{pop}{/setcolorscreen{setscreen pop pop pop pop pop pop pop pop pop}bdf}ifelse
/fhsetcolor{dup length 4 eq
{aload overprintprocess setcmykcolor}
{aload 1 get spots exch get 5 get setinkoverprint setspotcolor}
ifelse
}ndf
/settextcolor{
dup fhsetcolor
textblackopf
{
dup length 4 eq
{onlyk{3 get 1.0 eq{true setinkoverprint}if}{pop}ifelse}
{pop}
ifelse
}
{pop}ifelse
}ndf
/ka{/fc xdf}bdf
/Ka{/sc xdf}bdf
/xa{/fc xdf} bdf
/Xa{/sc xdf} bdf
/bc2[0 0]def
/bc4[0 0 0 0]def
/absmax{2 copy abs exch abs gt{exch}if pop}bdf
/calcstep
{ {calcgraysteps}{maxsteps}ifelse
tc1 length 4 eq
{
0 1 3
{tc1 1 index get
tc2 3 -1 roll get
sub
}for
absmax absmax absmax
}
{
bc2 tc1 1 get 1 exch put
tc1 gettint tc2 gettint
sub abs
}
ifelse
mul abs round dup 0 eq{pop 1}if
dup /numsteps xdf 1 sub dup 0 eq{pop 1}if /numsteps1 xdf
}bdf
/cblend{
tc1 length 4 eq
{
0 1 3
{bc4 exch
tc1 1 index get
tc2 2 index get
1 index sub
frac mul add put
}for bc4
}
{
bc2
tc1 gettint
tc2 gettint
1 index sub
frac mul add
puttint bc2
}
ifelse
fhsetcolor
}bdf
/logtaper{/frac frac 9 mul 1 add log def}bdf
FHIODict begin
/origmtx matrix currentmatrix def
/iminv false def
/invbuf{0 1 2 index length 1 sub{dup 2 index exch get 255 exch sub 2 index 3 1 roll put}for}bdf
/cmykbufs2gray{
dup length 0 1 3 -1 roll 1 sub
{4 index 1 index get
4 index 2 index get
4 index 3 index get
4 index 4 index get
255 exch sub ccmyk ccmyk ccmyk pop 5 mul exch 45 mul add exch 14 mul add -6 bitshift
2 index 3 1 roll put}for
4 1 roll pop pop pop
}bdf
end
/textopf false def
/textblackopf true def
/curtextmtx{}def
/otw .25 def
/msf{dup/curtextmtx xdf makefont setfont}bdf
/makesetfont/msf load def
/curtextheight{.707104 .707104 curtextmtx dtransform
dup mul exch dup mul add sqrt}bdf
/ta{1 index
{tempstr 0 2 index put tempstr 2 index
gsave exec grestore
tempstr stringwidth rmoveto
5 index eq{6 index 6 index rmoveto}if
3 index 3 index rmoveto
}forall 7{pop}repeat}bdf
/sts{settextcolor textopf setoverprint/ts{awidthshow}def exec false setoverprint}bdf
/stol{/xt currentlinewidth def
setlinewidth settextcolor textopf setoverprint newpath
/ts{{false charpath stroke}ta}def exec
false setoverprint xt setlinewidth}bdf
/currentpacking where{pop false setpacking}if
/spots[1 0 0 0 (Process Cyan) false newcmykcustomcolor
0 1 0 0 (Process Magenta) false newcmykcustomcolor
0 0 1 0 (Process Yellow) false newcmykcustomcolor
0 0 0 1 (Process Black) false newcmykcustomcolor
0 0 0 0  (Wit) false
newcmykcustomcolor
]def
%%EndSetup
%%IncludeFont: Symbol
0 dict dup begin
end
/f0 /Symbol FF def
[] 0 d
3.8637 M
1 w
0 j
0 J
0 O
0 R
0 i
false eomode
[0 0 0 1] Ka
[0 0 0 1] ka
vms
u
u
131.9142 606.5441 m
241.352 606.7839 L
163.1355 566.5634 L
53.6976 566.3235 L
131.9142 606.5441 L
[0 0 0 0.6] ka
b
U
147.4016 718.5827 m
148.8189 636.378 L
12 w
[0 0 0 0.3] Ka
S
true eomode
148.7639 639.5289 m
167.6698 639.859 L
149.5891 592.2644 L
129.8581 639.1989 L
148.7639 639.5289 L
[0 0 0 0.3] ka
f
n
false eomode
u
132.8487 738.9077 m
242.2866 739.1476 L
164.07 698.927 L
54.6322 698.6871 L
132.8487 738.9077 L
1 w
[0 0 0 1] Ka
s
U
132.8461 738.9088 m
54.6303 698.688 L
S
151.0854 738.949 m
72.8696 698.7281 L
S
169.3246 738.9891 m
91.1088 698.7682 L
S
187.5639 739.0292 m
109.3481 698.8083 L
S
205.8032 739.0693 m
127.5874 698.8484 L
S
224.0424 739.1094 m
145.8266 698.8885 L
S
67.6663 705.3915 m
86.3003 705.4324 L
177.1018 705.6321 L
S
80.7022 712.0949 m
190.1378 712.3356 L
0.5 w
S
93.7382 718.7984 m
203.1738 719.0391 L
1 w
S
106.7742 725.5019 m
216.2097 725.7426 L
S
119.8102 732.2054 m
229.2457 732.446 L
S
u
132.7443 694.6944 m
242.1821 694.9342 L
163.9656 654.7137 L
54.5277 654.4738 L
132.7443 694.6944 L
s
U
132.7417 694.6956 m
54.5259 654.4747 L
S
150.981 694.7357 m
72.7651 654.5148 L
S
169.2202 694.7758 m
91.0044 654.5549 L
S
187.4595 694.8159 m
109.2436 654.595 L
S
205.6987 694.856 m
127.4829 654.6351 L
S
vmrs
223.938 694.8961 m
145.7222 654.6752 L
S
67.5618 661.1782 m
176.9974 661.4188 L
S
80.5978 667.8816 m
190.0334 668.1223 L
S
93.6338 674.5851 m
203.0693 674.8258 L
S
106.6698 681.2886 m
216.1053 681.5293 L
S
119.7057 687.9921 m
229.1413 688.2327 L
S
u
131.9142 650.4811 m
241.352 650.7209 L
163.1355 610.5004 L
53.6976 610.2605 L
131.9142 650.4811 L
s
U
131.9116 650.4823 m
53.6958 610.2614 L
S
150.1508 650.5224 m
71.935 610.3015 L
S
168.3901 650.5625 m
90.1743 610.3416 L
S
186.6293 650.6026 m
108.4135 610.3817 L
S
204.8686 650.6427 m
126.6528 610.4218 L
S
223.1079 650.6828 m
144.892 610.4619 L
S
66.7317 616.9649 m
176.1673 617.2055 L
S
79.7677 623.6683 m
189.2032 623.909 L
S
92.8037 630.3718 m
202.2392 630.6125 L
S
105.8396 637.0753 m
215.2752 637.3159 L
S
118.8756 643.7788 m
228.3112 644.0194 L
S
vmrs
%%IncludeFont: Times-Roman
AVec 256 array copy
/f1 /|______Times-Roman dup RF findfont def
f1 DoPatch
{
f1 [10.0002 0 0 10.0002 0 0] makesetfont
212.2556 743.6925 m
0 0 32 0 0 (Map 3) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
AVec 256 array copy
/f1 /|______Times-Roman dup RF findfont def
f1 DoPatch
{
f1 [10.0002 0 0 10.0002 0 0] makesetfont
212.1755 699.2125 m
0 0 32 0 0 (Map 2) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
AVec 256 array copy
/f1 /|______Times-Roman dup RF findfont def
f1 DoPatch
{
f1 [10.0002 0 0 10.0002 0 0] makesetfont
210.5355 654.4125 m
0 0 32 0 0 (Map 1) ts
} 
[0 0 0 1]
sts
131.9116 606.5452 m
53.6958 566.3244 L
S
150.1508 606.5853 m
71.935 566.3645 L
S
168.3901 606.6255 m
90.1743 566.4046 L
S
186.6293 606.6656 m
108.4135 566.4447 L
S
204.8686 606.7057 m
126.6528 566.4848 L
S
223.1079 606.7458 m
144.8921 566.5249 L
S
66.7317 573.0278 m
176.1673 573.2685 L
S
79.7677 579.7313 m
189.2033 579.972 L
S
92.8037 586.4348 m
202.2392 586.6754 L
S
105.8396 593.1383 m
215.2752 593.3789 L
S
118.8756 599.8418 m
228.3112 600.0824 L
S
vmrs
%%IncludeFont: Times-Roman
AVec 256 array copy
/f1 /|______Times-Roman dup RF findfont def
f1 DoPatch
{
f1 [10.0002 0 0 10.0002 0 0] makesetfont
210.5355 610.4755 m
0 0 32 0 0 (NewMap) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
AVec 256 array copy
/f1 /|______Times-Roman dup RF findfont def
f1 DoPatch
{
f1 [10.4799 0 0 10.042 0 0] makesetfont
298.6752 765.3071 m
0 0 32 0 0 (Values) ts
298.6752 755.2653 m
0 0 32 0 0 (Map1) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
AVec 256 array copy
/f1 /|______Times-Roman dup RF findfont def
f1 DoPatch
{
f1 [10.4799 0 0 10.042 0 0] makesetfont
334.3233 765.3071 m
0 0 32 0 0 (Values) ts
334.3233 755.2653 m
0 0 32 0 0 (Map2) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
AVec 256 array copy
/f1 /|______Times-Roman dup RF findfont def
f1 DoPatch
{
f1 [10.4799 0 0 10.042 0 0] makesetfont
369.9715 765.3071 m
0 0 32 0 0 (Values) ts
369.9715 755.2653 m
0 0 32 0 0 (Map3) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
AVec 256 array copy
/f1 /|______Times-Roman dup RF findfont def
f1 DoPatch
{
f1 [10.4799 0 0 10.042 0 0] makesetfont
298.6752 736.8418 m
0 0 32 0 0 (> 2) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
AVec 256 array copy
/f1 /|______Times-Roman dup RF findfont def
f1 DoPatch
{
f1 [10.4799 0 0 10.042 0 0] makesetfont
334.3233 736.8418 m
0 0 32 0 0 (3) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
AVec 256 array copy
/f1 /|______Times-Roman dup RF findfont def
f1 DoPatch
{
f1 [10.4799 0 0 10.042 0 0] makesetfont
369.9715 736.8418 m
0 0 32 0 0 (<12) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
AVec 256 array copy
/f1 /|______Times-Roman dup RF findfont def
f1 DoPatch
{
f1 [10.4799 0 0 10.042 0 0] makesetfont
417.5023 736.8418 m
0 0 32 0 0 (0.8) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
AVec 256 array copy
/f1 /|______Times-Roman dup RF findfont def
f1 DoPatch
{
f1 [10.4799 0 0 10.042 0 0] makesetfont
298.6753 721.1858 m
0 0 32 0 0 (< 2) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
AVec 256 array copy
/f1 /|______Times-Roman dup RF findfont def
f1 DoPatch
{
f1 [10.4799 0 0 10.042 0 0] makesetfont
334.3234 721.1858 m
0 0 32 0 0 (3) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
AVec 256 array copy
/f1 /|______Times-Roman dup RF findfont def
f1 DoPatch
{
f1 [10.4799 0 0 10.042 0 0] makesetfont
369.9715 721.1858 m
0 0 32 0 0 (<12) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
AVec 256 array copy
/f1 /|______Times-Roman dup RF findfont def
f1 DoPatch
{
f1 [10.4799 0 0 10.042 0 0] makesetfont
417.5023 721.1858 m
0 0 32 0 0 (0.9) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
AVec 256 array copy
/f1 /|______Times-Roman dup RF findfont def
f1 DoPatch
{
f1 [10.4799 0 0 10.042 0 0] makesetfont
298.6753 705.5298 m
0 0 32 0 0 (> 2) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
AVec 256 array copy
/f1 /|______Times-Roman dup RF findfont def
f1 DoPatch
{
f1 [10.4799 0 0 10.042 0 0] makesetfont
334.3234 705.5298 m
0 0 32 0 0 (14) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
AVec 256 array copy
/f1 /|______Times-Roman dup RF findfont def
f1 DoPatch
{
f1 [10.4799 0 0 10.042 0 0] makesetfont
369.9715 705.5298 m
0 0 32 0 0 (<12) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
AVec 256 array copy
/f1 /|______Times-Roman dup RF findfont def
f1 DoPatch
{
f1 [10.4799 0 0 10.042 0 0] makesetfont
417.5023 705.5298 m
0 0 32 0 0 (1.0) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
AVec 256 array copy
/f1 /|______Times-Roman dup RF findfont def
f1 DoPatch
{
f1 [10.4799 0 0 10.042 0 0] makesetfont
298.6752 689.8738 m
0 0 32 0 0 (< 2) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
AVec 256 array copy
/f1 /|______Times-Roman dup RF findfont def
f1 DoPatch
{
f1 [10.4799 0 0 10.042 0 0] makesetfont
334.3233 689.8738 m
0 0 32 0 0 (14) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
AVec 256 array copy
/f1 /|______Times-Roman dup RF findfont def
f1 DoPatch
{
f1 [10.4799 0 0 10.042 0 0] makesetfont
369.9715 689.8738 m
0 0 32 0 0 (<12) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
AVec 256 array copy
/f1 /|______Times-Roman dup RF findfont def
f1 DoPatch
{
f1 [10.4799 0 0 10.042 0 0] makesetfont
417.5023 689.8738 m
0 0 32 0 0 (1.2) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
AVec 256 array copy
/f1 /|______Times-Roman dup RF findfont def
f1 DoPatch
{
f1 [10.4799 0 0 10.042 0 0] makesetfont
298.6753 674.2179 m
0 0 32 0 0 (> 2) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
AVec 256 array copy
/f1 /|______Times-Roman dup RF findfont def
f1 DoPatch
{
f1 [10.4799 0 0 10.042 0 0] makesetfont
334.3234 674.2179 m
0 0 32 0 0 (14) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
AVec 256 array copy
/f1 /|______Times-Roman dup RF findfont def
f1 DoPatch
{
f1 [10.4799 0 0 10.042 0 0] makesetfont
369.9715 674.2179 m
0 0 32 0 0 (8) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
AVec 256 array copy
/f1 /|______Times-Roman dup RF findfont def
f1 DoPatch
{
f1 [10.4799 0 0 10.042 0 0] makesetfont
417.5023 674.2179 m
0 0 32 0 0 (0.0) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
AVec 256 array copy
/f1 /|______Times-Roman dup RF findfont def
f1 DoPatch
{
f1 [10.4799 0 0 10.042 0 0] makesetfont
298.6753 657.1386 m
0 0 32 0 0 (< 2) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
AVec 256 array copy
/f1 /|______Times-Roman dup RF findfont def
f1 DoPatch
{
f1 [10.4799 0 0 10.042 0 0] makesetfont
334.3234 657.1386 m
0 0 32 0 0 (14) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
AVec 256 array copy
/f1 /|______Times-Roman dup RF findfont def
f1 DoPatch
{
f1 [10.4799 0 0 10.042 0 0] makesetfont
369.9715 657.1386 m
0 0 32 0 0 (8) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
AVec 256 array copy
/f1 /|______Times-Roman dup RF findfont def
f1 DoPatch
{
f1 [10.4799 0 0 10.042 0 0] makesetfont
417.5023 657.1386 m
0 0 32 0 0 (0.1) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
AVec 256 array copy
/f1 /|______Times-Roman dup RF findfont def
f1 DoPatch
{
f1 [10.4799 0 0 10.042 0 0] makesetfont
417.5023 765.3071 m
0 0 32 0 0 (Values) ts
417.5023 755.2653 m
0 0 32 0 0 (NewMap) ts
} 
[0 0 0 1]
sts
243.7796 630.7087 m
259.3701 630.7087 L
259.3701 735.5905 L
4 w
S
259.3701 735.5905 m
245.1969 735.5905 L
S
296.2205 649.1338 m
296.2205 643.4645 L
396.8504 643.4645 L
396.8504 649.1338 L
2 w
S
411.0236 649.1338 m
411.0236 643.4646 L
452.126 643.4646 L
452.126 649.1338 L
S
430.8661 634.9606 m
430.8661 585.3543 L
229.6063 583.9369 L
4 w
S
true eomode
229.6063 583.9369 m
235.9534 574.4164 L
210.5652 583.9369 L
235.9534 593.4575 L
229.6063 583.9369 L
f
n
false eomode
259.3701 684.5669 m
269.2914 684.5669 L
269.2913 602.3622 L
341.5748 602.3622 L
341.5748 619.3701 L
S
true eomode
341.5748 619.3701 m
332.0542 613.023 L
341.5748 638.4112 L
351.0954 613.023 L
341.5748 619.3701 L
f
n
false eomode
u
289.1339 776.6929 m
462.0472 776.6929 L
462.0472 616.5354 L
289.1339 616.5354 L
289.1339 776.6929 L
1 w
s
U
479.0551 724.252 m
457.7953 724.252 L
S
true eomode
458.7953 724.252 m
458.7953 718.252 L
443.7953 724.252 L
458.7953 730.252 L
458.7953 724.252 L
f
n
vmrs
%%IncludeFont: Times-Roman
AVec 256 array copy
/f1 /|______Times-Roman dup RF findfont def
f1 DoPatch
{
f1 [10 0 0 10 0 0] makesetfont
487.5591 722.8346 m
0 0 32 0 0 (KEY) ts
} 
[0 0 0 1]
sts
vmrs
%%IncludeFont: Times-Roman
AVec 256 array copy
/f1 /|______Times-Roman dup RF findfont def
f1 DoPatch
{
f1 [10 0 0 10 0 0] makesetfont
289.1339 780.9449 m
0 0 32 0 0 (LOOKUP TABLE) ts
} 
[0 0 0 1]
sts
U
vmr
%%Trailer
end             % FreeHandDict
end             % FHIODict
