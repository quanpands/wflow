/* this file is created by oplist. do not edit */
/* check table for parsing rules */
d_ops.push_back(Operator( "nop",OP_NOP, SYNTAX_NONE, VS_UNKNOWN, ST_DERIVED ,0, EXEC_NONE ,0,CG_PLAIN)); 
d_ops.push_back(Operator( "ill",OP_ILL, SYNTAX_NONE, VS_UNKNOWN, ST_DERIVED ,0, EXEC_NONE ,1,CG_PLAIN)); 
d_ops.push_back(Operator( "if",OP_IF_ELSE, SYNTAX_FUNC, VS_FIELD, ST_DERIVED ,3, EXEC_POLY ,0,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_B,ST_DERIVED);
 d_ops.back().pushBackArg(VS_FIELD,ST_DERIVED);
 d_ops.back().pushBackArg(VS_FIELD,ST_DERIVED);
d_ops.push_back(Operator( "ne",OP_NE, SYNTAX_OP, VS_B, ST_DERIVED ,2, EXEC_POLY ,1,CG_COMM)); 
 d_ops.back().pushBackArg(VS_FIELD,ST_DERIVED);
 d_ops.back().pushBackArg(VS_FIELD,ST_DERIVED);
d_ops.push_back(Operator( "eq",OP_EQ, SYNTAX_OP, VS_B, ST_DERIVED ,2, EXEC_POLY ,2,CG_COMM)); 
 d_ops.back().pushBackArg(VS_FIELD,ST_DERIVED);
 d_ops.back().pushBackArg(VS_FIELD,ST_DERIVED);
d_ops.push_back(Operator( "gt",OP_GT, SYNTAX_OP, VS_B, ST_DERIVED ,2, EXEC_POLY ,3,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_OS,ST_DERIVED);
 d_ops.back().pushBackArg(VS_OS,ST_DERIVED);
d_ops.push_back(Operator( "ge",OP_GE, SYNTAX_OP, VS_B, ST_DERIVED ,2, EXEC_POLY ,4,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_OS,ST_DERIVED);
 d_ops.back().pushBackArg(VS_OS,ST_DERIVED);
d_ops.push_back(Operator( "lt",OP_LT, SYNTAX_OP, VS_B, ST_DERIVED ,2, EXEC_POLY ,5,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_OS,ST_DERIVED);
 d_ops.back().pushBackArg(VS_OS,ST_DERIVED);
d_ops.push_back(Operator( "le",OP_LE, SYNTAX_OP, VS_B, ST_DERIVED ,2, EXEC_POLY ,6,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_OS,ST_DERIVED);
 d_ops.back().pushBackArg(VS_OS,ST_DERIVED);
d_ops.push_back(Operator( "min",OP_MIN, SYNTAX_FUNC, VS_OS, ST_DERIVED ,-2, EXEC_POLY ,7,CG_VARARG)); 
 d_funcs.insert(std::make_pair(std::string("min"),OP_MIN));
 d_ops.back().pushBackArg(VS_OS,ST_DERIVED);
 d_ops.back().pushBackArg(VS_OS,ST_DERIVED);
d_ops.push_back(Operator( "max",OP_MAX, SYNTAX_FUNC, VS_OS, ST_DERIVED ,-2, EXEC_POLY ,8,CG_VARARG)); 
 d_funcs.insert(std::make_pair(std::string("max"),OP_MAX));
 d_ops.back().pushBackArg(VS_OS,ST_DERIVED);
 d_ops.back().pushBackArg(VS_OS,ST_DERIVED);
d_ops.push_back(Operator( "cover",OP_COVER, SYNTAX_FUNC, VS_FIELD, ST_DERIVED ,-2, EXEC_POLY ,9,CG_VARARG)); 
 d_funcs.insert(std::make_pair(std::string("cover"),OP_COVER));
 d_ops.back().pushBackArg(VS_FIELD,ST_DERIVED);
 d_ops.back().pushBackArg(VS_FIELD,ST_DERIVED);
d_ops.push_back(Operator( "timeinput",OP_TIMEINPUT, SYNTAX_FUNC, VS_FIELD, ST_SPATIAL ,1, EXEC_MISC ,0,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("timeinput"),OP_TIMEINPUT));
 d_ops.back().pushBackArg(VS_FIELD,ST_SPATIAL);
d_ops.push_back(Operator( "timeinputsparse",OP_TIMEINPUTSPARSE, SYNTAX_FUNC, VS_FIELD, ST_SPATIAL ,1, EXEC_MISC ,1,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("timeinputsparse"),OP_TIMEINPUTSPARSE));
 d_ops.back().pushBackArg(VS_FIELD,ST_SPATIAL);
d_ops.push_back(Operator( "1ruletype",OP_SIMPLE_RULE, SYNTAX_NONE, VS_UNKNOWN, ST_DERIVED ,0, EXEC_NONE ,2,CG_PLAIN)); 
d_ops.push_back(Operator( "normal",OP_NORMAL, SYNTAX_FUNC, VS_S, ST_SPATIAL ,1, EXEC_DIFF_UN ,0,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("normal"),OP_NORMAL));
 d_ops.back().pushBackArg(VS_B,ST_DERIVED);
d_ops.push_back(Operator( "uniform",OP_UNIFORM, SYNTAX_FUNC, VS_S, ST_SPATIAL ,1, EXEC_DIFF_UN ,1,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("uniform"),OP_UNIFORM));
 d_ops.back().pushBackArg(VS_B,ST_DERIVED);
d_ops.push_back(Operator( "if",OP_IF, SYNTAX_FUNC, VS_FIELD, ST_SPATIAL ,2, EXEC_POLY ,10,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_B,ST_DERIVED);
 d_ops.back().pushBackArg(VS_FIELD,ST_DERIVED);
d_ops.push_back(Operator( "spatial",OP_SPATIAL, SYNTAX_FUNC, VS_FIELD, ST_SPATIAL ,1, EXEC_POLY ,11,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("spatial"),OP_SPATIAL));
 d_ops.back().pushBackArg(VS_FIELD,ST_DERIVED);
d_ops.push_back(Operator( "spreadzone",OP_SPREADZONE, SYNTAX_FUNC, VS_BNO, ST_SPATIAL ,3, EXEC_DOUBLE ,0,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("spreadzone"),OP_SPREADZONE));
 d_ops.back().pushBackArg(VS_BNO,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "spreadmaxzone",OP_SPREADMAXZONE, SYNTAX_FUNC, VS_BNO, ST_SPATIAL ,4, EXEC_DOUBLE ,1,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("spreadmaxzone"),OP_SPREADMAXZONE));
 d_ops.back().pushBackArg(VS_BNO,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "dynamicwaveq",OP_DYNAMICWAVEQ, SYNTAX_FUNC, VS_S, ST_SPATIAL ,16, EXEC_DOUBLE ,2,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("dynamicwaveq"),OP_DYNAMICWAVEQ));
 d_ops.back().pushBackArg(VS_L,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_NONSPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_NONSPATIAL);
 d_ops.back().pushBackArg(VS_B,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "spreadlddzone",OP_SPREADLDDZONE, SYNTAX_FUNC, VS_BNO, ST_SPATIAL ,4, EXEC_DOUBLE ,3,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("spreadlddzone"),OP_SPREADLDDZONE));
 d_ops.back().pushBackArg(VS_L,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_BNO,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "order",OP_ORDER, SYNTAX_FUNC, VS_S, ST_SPATIAL ,1, EXEC_GLOBAL ,0,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("order"),OP_ORDER));
 d_ops.back().pushBackArg(VS_OS,ST_SPATIAL);
d_ops.push_back(Operator( "windowminimum",OP_WINDOWMINIMUM, SYNTAX_FUNC, VS_OS, ST_SPATIAL ,2, EXEC_GLOBAL ,1,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("windowminimum"),OP_WINDOWMINIMUM));
 d_ops.back().pushBackArg(VS_OS,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "brenner",OP_BRENNER, SYNTAX_FUNC, VS_B, ST_SPATIAL ,6, EXEC_GLOBAL ,2,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("brenner"),OP_BRENNER));
 d_ops.back().pushBackArg(VS_S,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "windowmaximum",OP_WINDOWMAXIMUM, SYNTAX_FUNC, VS_OS, ST_SPATIAL ,2, EXEC_GLOBAL ,3,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("windowmaximum"),OP_WINDOWMAXIMUM));
 d_ops.back().pushBackArg(VS_OS,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "areamaximum",OP_AREAMAXIMUM, SYNTAX_FUNC, VS_OS, ST_SPATIAL ,2, EXEC_GLOBAL ,4,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("areamaximum"),OP_AREAMAXIMUM));
 d_ops.back().pushBackArg(VS_OS,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_BNO,ST_SPATIAL);
d_ops.push_back(Operator( "areaminimum",OP_AREAMINIMUM, SYNTAX_FUNC, VS_OS, ST_SPATIAL ,2, EXEC_GLOBAL ,5,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("areaminimum"),OP_AREAMINIMUM));
 d_ops.back().pushBackArg(VS_OS,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_BNO,ST_SPATIAL);
d_ops.push_back(Operator( "windowdiversity",OP_WINDOWDIVERSITY, SYNTAX_FUNC, VS_S, ST_SPATIAL ,2, EXEC_GLOBAL ,6,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("windowdiversity"),OP_WINDOWDIVERSITY));
 d_ops.back().pushBackArg(VS_BNO,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "areadiversity",OP_AREADIVERSITY, SYNTAX_FUNC, VS_S, ST_SPATIAL ,2, EXEC_GLOBAL ,7,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("areadiversity"),OP_AREADIVERSITY));
 d_ops.back().pushBackArg(VS_BNO,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_BNO,ST_SPATIAL);
d_ops.push_back(Operator( "areamajority",OP_AREAMAJORITY, SYNTAX_FUNC, VS_BNO, ST_SPATIAL ,2, EXEC_GLOBAL ,8,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("areamajority"),OP_AREAMAJORITY));
 d_ops.back().pushBackArg(VS_BNO,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_BNO,ST_SPATIAL);
d_ops.push_back(Operator( "windowmajority",OP_WINDOWMAJORITY, SYNTAX_FUNC, VS_BNO, ST_SPATIAL ,2, EXEC_GLOBAL ,9,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("windowmajority"),OP_WINDOWMAJORITY));
 d_ops.back().pushBackArg(VS_BNO,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "kinematic",OP_KINEMATIC, SYNTAX_FUNC, VS_S, ST_SPATIAL ,7, EXEC_GLOBAL ,10,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("kinematic"),OP_KINEMATIC));
 d_ops.back().pushBackArg(VS_L,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "*",OP_MUL, SYNTAX_OP, VS_S, ST_DERIVED ,2, EXEC_SAME_BIN ,0,CG_COMM)); 
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "*=",OP_ASSMUL, SYNTAX_OP, VS_S, ST_DERIVED ,2, EXEC_ASS ,0,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "/",OP_FDIV, SYNTAX_OP, VS_S, ST_DERIVED ,2, EXEC_SAME_BIN ,1,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "/=",OP_ASSFDIV, SYNTAX_OP, VS_S, ST_DERIVED ,2, EXEC_ASS ,1,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "**",OP_POW, SYNTAX_OP, VS_S, ST_DERIVED ,2, EXEC_SAME_BIN ,2,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "**=",OP_ASSPOW, SYNTAX_OP, VS_S, ST_DERIVED ,2, EXEC_ASS ,2,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "mod",OP_MOD, SYNTAX_OP, VS_S, ST_DERIVED ,2, EXEC_SAME_BIN ,3,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "idiv",OP_IDIV, SYNTAX_OP, VS_S, ST_DERIVED ,2, EXEC_SAME_BIN ,4,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "+",OP_UADD, SYNTAX_OP, VS_S, ST_DERIVED ,1, EXEC_SAME_UN ,0,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "-",OP_UMIN, SYNTAX_OP, VS_S, ST_DERIVED ,1, EXEC_SAME_UN ,1,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "+",OP_BADD, SYNTAX_OP, VS_S, ST_DERIVED ,2, EXEC_SAME_BIN ,5,CG_COMM)); 
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "+=",OP_ASSBADD, SYNTAX_OP, VS_S, ST_DERIVED ,2, EXEC_ASS ,3,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "-",OP_BMIN, SYNTAX_OP, VS_S, ST_DERIVED ,2, EXEC_SAME_BIN ,6,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "-=",OP_ASSBMIN, SYNTAX_OP, VS_S, ST_DERIVED ,2, EXEC_ASS ,4,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "mapminimum",OP_MAPMINIMUM, SYNTAX_FUNC, VS_OS, ST_NONSPATIAL ,1, EXEC_POLY ,12,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("mapminimum"),OP_MAPMINIMUM));
 d_ops.back().pushBackArg(VS_OS,ST_SPATIAL);
d_ops.push_back(Operator( "mapmaximum",OP_MAPMAXIMUM, SYNTAX_FUNC, VS_OS, ST_NONSPATIAL ,1, EXEC_POLY ,13,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("mapmaximum"),OP_MAPMAXIMUM));
 d_ops.back().pushBackArg(VS_OS,ST_SPATIAL);
d_ops.push_back(Operator( "timeinputscalar",OP_TIMEINPUTSCALAR, SYNTAX_FUNC, VS_S, ST_DERIVED ,1, EXEC_T_IN ,0,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("timeinputscalar"),OP_TIMEINPUTSCALAR));
 d_ops.back().pushBackArg(VS_BNO,ST_DERIVED);
d_ops.push_back(Operator( "timeinputdirectional",OP_TIMEINPUTDIRECTIONAL, SYNTAX_FUNC, VS_D, ST_DERIVED ,1, EXEC_T_IN ,1,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("timeinputdirectional"),OP_TIMEINPUTDIRECTIONAL));
 d_ops.back().pushBackArg(VS_BNO,ST_DERIVED);
d_ops.push_back(Operator( "timeinputboolean",OP_TIMEINPUTBOOLEAN, SYNTAX_FUNC, VS_B, ST_DERIVED ,1, EXEC_T_IN ,2,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("timeinputboolean"),OP_TIMEINPUTBOOLEAN));
 d_ops.back().pushBackArg(VS_BNO,ST_DERIVED);
d_ops.push_back(Operator( "timeinputldd",OP_TIMEINPUTLDD, SYNTAX_FUNC, VS_L, ST_DERIVED ,1, EXEC_T_IN ,3,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("timeinputldd"),OP_TIMEINPUTLDD));
 d_ops.back().pushBackArg(VS_BNO,ST_DERIVED);
d_ops.push_back(Operator( "timeinputnominal",OP_TIMEINPUTNOMINAL, SYNTAX_FUNC, VS_N, ST_DERIVED ,1, EXEC_T_IN ,4,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("timeinputnominal"),OP_TIMEINPUTNOMINAL));
 d_ops.back().pushBackArg(VS_BNO,ST_DERIVED);
d_ops.push_back(Operator( "timeinputordinal",OP_TIMEINPUTORDINAL, SYNTAX_FUNC, VS_O, ST_DERIVED ,1, EXEC_T_IN ,5,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("timeinputordinal"),OP_TIMEINPUTORDINAL));
 d_ops.back().pushBackArg(VS_BNO,ST_DERIVED);
d_ops.push_back(Operator( "lookupnominal",OP_LOOKUPNOMINAL, SYNTAX_FUNC, VS_N, ST_DERIVED ,-1, EXEC_LOOKUP ,0,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("lookupnominal"),OP_LOOKUPNOMINAL));
 d_ops.back().pushBackArg(VS_FIELD,ST_DERIVED);
d_ops.push_back(Operator( "lookupboolean",OP_LOOKUPBOOLEAN, SYNTAX_FUNC, VS_B, ST_DERIVED ,-1, EXEC_LOOKUP ,1,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("lookupboolean"),OP_LOOKUPBOOLEAN));
 d_ops.back().pushBackArg(VS_FIELD,ST_DERIVED);
d_ops.push_back(Operator( "lookupordinal",OP_LOOKUPORDINAL, SYNTAX_FUNC, VS_O, ST_DERIVED ,-1, EXEC_LOOKUP ,2,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("lookupordinal"),OP_LOOKUPORDINAL));
 d_ops.back().pushBackArg(VS_FIELD,ST_DERIVED);
d_ops.push_back(Operator( "lookupscalar",OP_LOOKUPSCALAR, SYNTAX_FUNC, VS_S, ST_DERIVED ,-1, EXEC_LOOKUP ,3,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("lookupscalar"),OP_LOOKUPSCALAR));
 d_ops.back().pushBackArg(VS_FIELD,ST_DERIVED);
d_ops.push_back(Operator( "lookuplinear",OP_LOOKUPLINEAR, SYNTAX_FUNC, VS_S, ST_DERIVED ,-1, EXEC_LOOKUP ,4,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("lookuplinear"),OP_LOOKUPLINEAR));
 d_ops.back().pushBackArg(VS_FIELD,ST_DERIVED);
d_ops.push_back(Operator( "lookupdirectional",OP_LOOKUPDIRECTIONAL, SYNTAX_FUNC, VS_D, ST_DERIVED ,-1, EXEC_LOOKUP ,5,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("lookupdirectional"),OP_LOOKUPDIRECTIONAL));
 d_ops.back().pushBackArg(VS_FIELD,ST_DERIVED);
d_ops.push_back(Operator( "lookupldd",OP_LOOKUPLDD, SYNTAX_FUNC, VS_L, ST_DERIVED ,-1, EXEC_LOOKUP ,6,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("lookupldd"),OP_LOOKUPLDD));
 d_ops.back().pushBackArg(VS_FIELD,ST_DERIVED);
d_ops.push_back(Operator( "indexnominal",OP_INDEXNOMINAL, SYNTAX_FUNC, VS_N, ST_NONSPATIAL ,1, EXEC_INDEX ,0,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("indexnominal"),OP_INDEXNOMINAL));
 d_ops.back().pushBackArg(VS_INDEXTABLE,ST_NON);
d_ops.push_back(Operator( "indexboolean",OP_INDEXBOOLEAN, SYNTAX_FUNC, VS_B, ST_NONSPATIAL ,1, EXEC_INDEX ,1,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("indexboolean"),OP_INDEXBOOLEAN));
 d_ops.back().pushBackArg(VS_INDEXTABLE,ST_NON);
d_ops.push_back(Operator( "indexordinal",OP_INDEXORDINAL, SYNTAX_FUNC, VS_O, ST_NONSPATIAL ,1, EXEC_INDEX ,2,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("indexordinal"),OP_INDEXORDINAL));
 d_ops.back().pushBackArg(VS_INDEXTABLE,ST_NON);
d_ops.push_back(Operator( "indexscalar",OP_INDEXSCALAR, SYNTAX_FUNC, VS_S, ST_NONSPATIAL ,1, EXEC_INDEX ,3,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("indexscalar"),OP_INDEXSCALAR));
 d_ops.back().pushBackArg(VS_INDEXTABLE,ST_NON);
d_ops.push_back(Operator( "indexdirectional",OP_INDEXDIRECTIONAL, SYNTAX_FUNC, VS_D, ST_NONSPATIAL ,1, EXEC_INDEX ,4,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("indexdirectional"),OP_INDEXDIRECTIONAL));
 d_ops.back().pushBackArg(VS_INDEXTABLE,ST_NON);
d_ops.push_back(Operator( "indexldd",OP_INDEXLDD, SYNTAX_FUNC, VS_L, ST_NONSPATIAL ,1, EXEC_INDEX ,5,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("indexldd"),OP_INDEXLDD));
 d_ops.back().pushBackArg(VS_INDEXTABLE,ST_NON);
d_ops.push_back(Operator( "indextable",OP_INDEXTABLE, SYNTAX_FUNC, VS_TABLE, ST_DERIVED ,1, EXEC_INDEX ,6,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("indextable"),OP_INDEXTABLE));
 d_ops.back().pushBackArg(VS_INDEXTABLE,ST_NON);
d_ops.push_back(Operator( "index",OP_INDEX, SYNTAX_FUNC, VS_FIELD, ST_SPATIAL ,1, EXEC_INDEX ,7,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("index"),OP_INDEX));
 d_ops.back().pushBackArg(VS_INDEXTABLE,ST_NON);
d_ops.push_back(Operator( "ldd",OP_LDD, SYNTAX_FUNC, VS_L, ST_DERIVED ,1, EXEC_CONV ,0,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("ldd"),OP_LDD));
 d_ops.back().pushBackArg(VS_NOSDL,ST_DERIVED);
d_ops.push_back(Operator( "directional",OP_DIRECTIONAL, SYNTAX_FUNC, VS_D, ST_DERIVED ,1, EXEC_CONV ,1,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("directional"),OP_DIRECTIONAL));
 d_ops.back().pushBackArg(VS_FIELD,ST_DERIVED);
d_ops.push_back(Operator( "scalar",OP_SCALAR, SYNTAX_FUNC, VS_S, ST_DERIVED ,1, EXEC_CONV ,2,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("scalar"),OP_SCALAR));
 d_ops.back().pushBackArg(VS_FIELD,ST_DERIVED);
d_ops.push_back(Operator( "boolean",OP_BOOLEAN, SYNTAX_FUNC, VS_B, ST_DERIVED ,1, EXEC_CONV ,3,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("boolean"),OP_BOOLEAN));
 d_ops.back().pushBackArg(VS_FIELD,ST_DERIVED);
d_ops.push_back(Operator( "nominal",OP_NOMINAL, SYNTAX_FUNC, VS_N, ST_DERIVED ,1, EXEC_CONV ,4,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("nominal"),OP_NOMINAL));
 d_ops.back().pushBackArg(VS_FIELD,ST_DERIVED);
d_ops.push_back(Operator( "ordinal",OP_ORDINAL, SYNTAX_FUNC, VS_O, ST_DERIVED ,1, EXEC_CONV ,5,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("ordinal"),OP_ORDINAL));
 d_ops.back().pushBackArg(VS_FIELD,ST_DERIVED);
d_ops.push_back(Operator( "and",OP_AND, SYNTAX_OP, VS_B, ST_DERIVED ,2, EXEC_SAME_BIN ,7,CG_COMM)); 
 d_ops.back().pushBackArg(VS_B,ST_DERIVED);
 d_ops.back().pushBackArg(VS_B,ST_DERIVED);
d_ops.push_back(Operator( "or",OP_OR, SYNTAX_OP, VS_B, ST_DERIVED ,2, EXEC_SAME_BIN ,8,CG_COMM)); 
 d_ops.back().pushBackArg(VS_B,ST_DERIVED);
 d_ops.back().pushBackArg(VS_B,ST_DERIVED);
d_ops.push_back(Operator( "xor",OP_XOR, SYNTAX_OP, VS_B, ST_DERIVED ,2, EXEC_SAME_BIN ,9,CG_COMM)); 
 d_ops.back().pushBackArg(VS_B,ST_DERIVED);
 d_ops.back().pushBackArg(VS_B,ST_DERIVED);
d_ops.push_back(Operator( "not",OP_NOT, SYNTAX_OP, VS_B, ST_DERIVED ,1, EXEC_SAME_UN ,2,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_B,ST_DERIVED);
d_ops.push_back(Operator( "test_until",OP_TEST_UNTIL, SYNTAX_OP, VS_B, ST_DERIVED ,1, EXEC_MISC ,2,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_B,ST_DERIVED);
d_ops.push_back(Operator( "sin",OP_SIN, SYNTAX_FUNC, VS_S, ST_DERIVED ,1, EXEC_TRIG ,0,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("sin"),OP_SIN));
 d_ops.back().pushBackArg(VS_SD,ST_DERIVED);
d_ops.push_back(Operator( "cos",OP_COS, SYNTAX_FUNC, VS_S, ST_DERIVED ,1, EXEC_TRIG ,1,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("cos"),OP_COS));
 d_ops.back().pushBackArg(VS_SD,ST_DERIVED);
d_ops.push_back(Operator( "tan",OP_TAN, SYNTAX_FUNC, VS_S, ST_DERIVED ,1, EXEC_TRIG ,2,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("tan"),OP_TAN));
 d_ops.back().pushBackArg(VS_SD,ST_DERIVED);
d_ops.push_back(Operator( "asin",OP_ASIN, SYNTAX_FUNC, VS_D, ST_DERIVED ,1, EXEC_SAME_UN ,3,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("asin"),OP_ASIN));
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "acos",OP_ACOS, SYNTAX_FUNC, VS_D, ST_DERIVED ,1, EXEC_SAME_UN ,4,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("acos"),OP_ACOS));
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "atan",OP_ATAN, SYNTAX_FUNC, VS_D, ST_DERIVED ,1, EXEC_SAME_UN ,5,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("atan"),OP_ATAN));
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "abs",OP_ABS, SYNTAX_FUNC, VS_S, ST_DERIVED ,1, EXEC_SAME_UN ,6,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("abs"),OP_ABS));
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "exp",OP_EXP, SYNTAX_FUNC, VS_S, ST_DERIVED ,1, EXEC_SAME_UN ,7,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("exp"),OP_EXP));
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "fac",OP_FAC, SYNTAX_FUNC, VS_S, ST_DERIVED ,1, EXEC_SAME_UN ,8,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("fac"),OP_FAC));
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "rounddown",OP_ROUNDDOWN, SYNTAX_FUNC, VS_S, ST_DERIVED ,1, EXEC_SAME_UN ,9,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("rounddown"),OP_ROUNDDOWN));
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "ln",OP_LN, SYNTAX_FUNC, VS_S, ST_DERIVED ,1, EXEC_SAME_UN ,10,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("ln"),OP_LN));
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "log10",OP_LOG10, SYNTAX_FUNC, VS_S, ST_DERIVED ,1, EXEC_SAME_UN ,11,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("log10"),OP_LOG10));
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "roundup",OP_ROUNDUP, SYNTAX_FUNC, VS_S, ST_DERIVED ,1, EXEC_SAME_UN ,12,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("roundup"),OP_ROUNDUP));
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "roundoff",OP_ROUNDOFF, SYNTAX_FUNC, VS_S, ST_DERIVED ,1, EXEC_SAME_UN ,13,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("roundoff"),OP_ROUNDOFF));
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "sqrt",OP_SQRT, SYNTAX_FUNC, VS_S, ST_DERIVED ,1, EXEC_SAME_UN ,14,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("sqrt"),OP_SQRT));
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "sqr",OP_SQR, SYNTAX_FUNC, VS_S, ST_DERIVED ,1, EXEC_SAME_UN ,15,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("sqr"),OP_SQR));
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "xcoordinate",OP_XCOORDINATE, SYNTAX_FUNC, VS_S, ST_SPATIAL ,1, EXEC_GEN_SP ,0,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("xcoordinate"),OP_XCOORDINATE));
 d_ops.back().pushBackArg(VS_B,ST_DERIVED);
d_ops.push_back(Operator( "ycoordinate",OP_YCOORDINATE, SYNTAX_FUNC, VS_S, ST_SPATIAL ,1, EXEC_GEN_SP ,1,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("ycoordinate"),OP_YCOORDINATE));
 d_ops.back().pushBackArg(VS_B,ST_DERIVED);
d_ops.push_back(Operator( "uniqueid",OP_UNIQUEID, SYNTAX_FUNC, VS_S, ST_SPATIAL ,1, EXEC_GEN_SP ,2,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("uniqueid"),OP_UNIQUEID));
 d_ops.back().pushBackArg(VS_B,ST_DERIVED);
d_ops.push_back(Operator( "move",OP_MOVE, SYNTAX_FUNC, VS_B, ST_SPATIAL ,3, EXEC_GLOBAL ,11,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("move"),OP_MOVE));
 d_ops.back().pushBackArg(VS_B,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "shift",OP_SHIFT, SYNTAX_FUNC, VS_FIELD, ST_SPATIAL ,3, EXEC_GLOBAL ,12,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("shift"),OP_SHIFT));
 d_ops.back().pushBackArg(VS_FIELD,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_NONSPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_NONSPATIAL);
d_ops.push_back(Operator( "shift0",OP_SHIFT0, SYNTAX_FUNC, VS_FIELD, ST_SPATIAL ,3, EXEC_GLOBAL ,13,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("shift0"),OP_SHIFT0));
 d_ops.back().pushBackArg(VS_FIELD,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_NONSPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_NONSPATIAL);
d_ops.push_back(Operator( "celllength",OP_CELLLENGTH, SYNTAX_FUNC, VS_S, ST_NONSPATIAL ,0, EXEC_GEN_NS ,0,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("celllength"),OP_CELLLENGTH));
d_ops.push_back(Operator( "cellarea",OP_CELLAREA, SYNTAX_FUNC, VS_S, ST_NONSPATIAL ,0, EXEC_GEN_NS ,1,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("cellarea"),OP_CELLAREA));
d_ops.push_back(Operator( "time",OP_TIME, SYNTAX_FUNC, VS_S, ST_NONSPATIAL ,0, EXEC_GEN_NS ,2,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("time"),OP_TIME));
d_ops.push_back(Operator( "timeslice",OP_TIMESLICE, SYNTAX_FUNC, VS_S, ST_NONSPATIAL ,0, EXEC_GEN_NS ,3,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("timeslice"),OP_TIMESLICE));
d_ops.push_back(Operator( "mapnormal",OP_MAPNORMAL, SYNTAX_FUNC, VS_S, ST_NONSPATIAL ,0, EXEC_GEN_NS ,4,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("mapnormal"),OP_MAPNORMAL));
d_ops.push_back(Operator( "mapuniform",OP_MAPUNIFORM, SYNTAX_FUNC, VS_S, ST_NONSPATIAL ,0, EXEC_GEN_NS ,5,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("mapuniform"),OP_MAPUNIFORM));
d_ops.push_back(Operator( "succ",OP_SUCC, SYNTAX_FUNC, VS_O, ST_DERIVED ,1, EXEC_SAME_UN ,16,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("succ"),OP_SUCC));
 d_ops.back().pushBackArg(VS_O,ST_DERIVED);
d_ops.push_back(Operator( "pred",OP_PRED, SYNTAX_FUNC, VS_O, ST_DERIVED ,1, EXEC_SAME_UN ,17,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("pred"),OP_PRED));
 d_ops.back().pushBackArg(VS_O,ST_DERIVED);
d_ops.push_back(Operator( "pit",OP_PIT, SYNTAX_FUNC, VS_N, ST_DERIVED ,1, EXEC_DIFF_UN ,2,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("pit"),OP_PIT));
 d_ops.back().pushBackArg(VS_L,ST_DERIVED);
d_ops.push_back(Operator( "nodirection",OP_NODIRECTION, SYNTAX_FUNC, VS_B, ST_DERIVED ,1, EXEC_DIFF_UN ,3,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("nodirection"),OP_NODIRECTION));
 d_ops.back().pushBackArg(VS_D,ST_DERIVED);
d_ops.push_back(Operator( "defined",OP_DEFINED, SYNTAX_FUNC, VS_B, ST_DERIVED ,1, EXEC_POLY ,14,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("defined"),OP_DEFINED));
 d_ops.back().pushBackArg(VS_FIELD,ST_DERIVED);
d_ops.push_back(Operator( "accustate",OP_ACCUSTATE, SYNTAX_FUNC, VS_S, ST_SPATIAL ,2, EXEC_DOUBLE ,4,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("accustate"),OP_ACCUSTATE));
 d_ops.back().pushBackArg(VS_L,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "accucapacitystate",OP_ACCUCAPACITYSTATE, SYNTAX_FUNC, VS_S, ST_SPATIAL ,3, EXEC_DOUBLE ,5,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("accucapacitystate"),OP_ACCUCAPACITYSTATE));
 d_ops.back().pushBackArg(VS_L,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "accuthresholdstate",OP_ACCUTHRESHOLDSTATE, SYNTAX_FUNC, VS_S, ST_SPATIAL ,3, EXEC_DOUBLE ,6,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("accuthresholdstate"),OP_ACCUTHRESHOLDSTATE));
 d_ops.back().pushBackArg(VS_L,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "accufractionstate",OP_ACCUFRACTIONSTATE, SYNTAX_FUNC, VS_S, ST_SPATIAL ,3, EXEC_DOUBLE ,7,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("accufractionstate"),OP_ACCUFRACTIONSTATE));
 d_ops.back().pushBackArg(VS_L,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "accutriggerstate",OP_ACCUTRIGGERSTATE, SYNTAX_FUNC, VS_S, ST_SPATIAL ,3, EXEC_DOUBLE ,8,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("accutriggerstate"),OP_ACCUTRIGGERSTATE));
 d_ops.back().pushBackArg(VS_L,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "accutraveltimestate",OP_ACCUTRAVELTIMESTATE, SYNTAX_FUNC, VS_S, ST_SPATIAL ,3, EXEC_DOUBLE ,9,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("accutraveltimestate"),OP_ACCUTRAVELTIMESTATE));
 d_ops.back().pushBackArg(VS_L,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "accuflux",OP_ACCUFLUX, SYNTAX_FUNC, VS_S, ST_SPATIAL ,2, EXEC_DOUBLE ,10,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("accuflux"),OP_ACCUFLUX));
 d_ops.back().pushBackArg(VS_L,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "accucapacityflux",OP_ACCUCAPACITYFLUX, SYNTAX_FUNC, VS_S, ST_SPATIAL ,3, EXEC_DOUBLE ,11,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("accucapacityflux"),OP_ACCUCAPACITYFLUX));
 d_ops.back().pushBackArg(VS_L,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "accuthresholdflux",OP_ACCUTHRESHOLDFLUX, SYNTAX_FUNC, VS_S, ST_SPATIAL ,3, EXEC_DOUBLE ,12,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("accuthresholdflux"),OP_ACCUTHRESHOLDFLUX));
 d_ops.back().pushBackArg(VS_L,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "accufractionflux",OP_ACCUFRACTIONFLUX, SYNTAX_FUNC, VS_S, ST_SPATIAL ,3, EXEC_DOUBLE ,13,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("accufractionflux"),OP_ACCUFRACTIONFLUX));
 d_ops.back().pushBackArg(VS_L,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "accutriggerflux",OP_ACCUTRIGGERFLUX, SYNTAX_FUNC, VS_S, ST_SPATIAL ,3, EXEC_DOUBLE ,14,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("accutriggerflux"),OP_ACCUTRIGGERFLUX));
 d_ops.back().pushBackArg(VS_L,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "accutraveltimeflux",OP_ACCUTRAVELTIMEFLUX, SYNTAX_FUNC, VS_S, ST_SPATIAL ,3, EXEC_DOUBLE ,15,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("accutraveltimeflux"),OP_ACCUTRAVELTIMEFLUX));
 d_ops.back().pushBackArg(VS_L,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "diffuseflux",OP_DIFFUSEFLUX, SYNTAX_FUNC, VS_S, ST_SPATIAL ,3, EXEC_DOUBLE ,16,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("diffuseflux"),OP_DIFFUSEFLUX));
 d_ops.back().pushBackArg(VS_D,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "diffusestate",OP_DIFFUSESTATE, SYNTAX_FUNC, VS_S, ST_SPATIAL ,3, EXEC_DOUBLE ,17,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("diffusestate"),OP_DIFFUSESTATE));
 d_ops.back().pushBackArg(VS_D,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "accu",OP_ACCU, SYNTAX_NONE, VS_S, ST_SPATIAL ,2, EXEC_DASS ,0,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_L,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "accucapacity",OP_ACCUCAPACITY, SYNTAX_NONE, VS_S, ST_SPATIAL ,3, EXEC_DASS ,1,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_L,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "accuthreshold",OP_ACCUTHRESHOLD, SYNTAX_NONE, VS_S, ST_SPATIAL ,3, EXEC_DASS ,2,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_L,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "accufraction",OP_ACCUFRACTION, SYNTAX_NONE, VS_S, ST_SPATIAL ,3, EXEC_DASS ,3,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_L,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "accutrigger",OP_ACCUTRIGGER, SYNTAX_NONE, VS_S, ST_SPATIAL ,3, EXEC_DASS ,4,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_L,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "accutraveltime",OP_ACCUTRAVELTIME, SYNTAX_NONE, VS_S, ST_SPATIAL ,3, EXEC_DASS ,5,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_L,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "diffuse",OP_DIFFUSE, SYNTAX_NONE, VS_S, ST_SPATIAL ,3, EXEC_DASS ,6,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_D,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "timeoutput",OP_TIMEOUTPUT, SYNTAX_FUNC, VS_TSS, ST_NON ,2, EXEC_NONE ,3,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("timeoutput"),OP_TIMEOUTPUT));
 d_ops.back().pushBackArg(VS_BNO,ST_DERIVED);
 d_ops.back().pushBackArg(VS_FIELD,ST_DERIVED);
d_ops.push_back(Operator( "mapsummary",OP_MAPSUMMARY, SYNTAX_FUNC, VS_TSS, ST_NON ,1, EXEC_NONE ,4,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("mapsummary"),OP_MAPSUMMARY));
 d_ops.back().pushBackArg(VS_FIELD,ST_SPATIAL);
d_ops.push_back(Operator( "maptotal",OP_MAPTOTAL, SYNTAX_FUNC, VS_S, ST_NONSPATIAL ,1, EXEC_DIFF_UN ,4,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("maptotal"),OP_MAPTOTAL));
 d_ops.back().pushBackArg(VS_S,ST_SPATIAL);
d_ops.push_back(Operator( "maparea",OP_MAPAREA, SYNTAX_FUNC, VS_S, ST_NONSPATIAL ,1, EXEC_POLY ,15,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("maparea"),OP_MAPAREA));
 d_ops.back().pushBackArg(VS_FIELD,ST_SPATIAL);
d_ops.push_back(Operator( "areaarea",OP_AREAAREA, SYNTAX_FUNC, VS_S, ST_SPATIAL ,1, EXEC_GLOBAL ,14,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("areaarea"),OP_AREAAREA));
 d_ops.back().pushBackArg(VS_BNO,ST_SPATIAL);
d_ops.push_back(Operator( "clump",OP_CLUMP, SYNTAX_FUNC, VS_N, ST_SPATIAL ,1, EXEC_GLOBAL ,15,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("clump"),OP_CLUMP));
 d_ops.back().pushBackArg(VS_BNO,ST_SPATIAL);
d_ops.push_back(Operator( "drain",OP_DRAIN, SYNTAX_FUNC, VS_S, ST_SPATIAL ,2, EXEC_GLOBAL ,16,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("drain"),OP_DRAIN));
 d_ops.back().pushBackArg(VS_S,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_SPATIAL);
d_ops.push_back(Operator( "path",OP_PATH, SYNTAX_FUNC, VS_B, ST_SPATIAL ,2, EXEC_GLOBAL ,17,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("path"),OP_PATH));
 d_ops.back().pushBackArg(VS_L,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_B,ST_SPATIAL);
d_ops.push_back(Operator( "aspect",OP_ASPECT, SYNTAX_FUNC, VS_D, ST_SPATIAL ,1, EXEC_GLOBAL ,18,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("aspect"),OP_ASPECT));
 d_ops.back().pushBackArg(VS_S,ST_SPATIAL);
d_ops.push_back(Operator( "slope",OP_SLOPE, SYNTAX_FUNC, VS_S, ST_SPATIAL ,1, EXEC_GLOBAL ,19,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("slope"),OP_SLOPE));
 d_ops.back().pushBackArg(VS_S,ST_SPATIAL);
d_ops.push_back(Operator( "window4total",OP_WINDOW4TOTAL, SYNTAX_FUNC, VS_S, ST_SPATIAL ,1, EXEC_GLOBAL ,20,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("window4total"),OP_WINDOW4TOTAL));
 d_ops.back().pushBackArg(VS_S,ST_SPATIAL);
d_ops.push_back(Operator( "profcurv",OP_PROFCURV, SYNTAX_FUNC, VS_S, ST_SPATIAL ,1, EXEC_GLOBAL ,21,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("profcurv"),OP_PROFCURV));
 d_ops.back().pushBackArg(VS_S,ST_SPATIAL);
d_ops.push_back(Operator( "plancurv",OP_PLANCURV, SYNTAX_FUNC, VS_S, ST_SPATIAL ,1, EXEC_GLOBAL ,22,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("plancurv"),OP_PLANCURV));
 d_ops.back().pushBackArg(VS_S,ST_SPATIAL);
d_ops.push_back(Operator( "view",OP_VIEW, SYNTAX_FUNC, VS_B, ST_SPATIAL ,2, EXEC_GLOBAL ,23,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("view"),OP_VIEW));
 d_ops.back().pushBackArg(VS_S,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_B,ST_SPATIAL);
d_ops.push_back(Operator( "extentofview",OP_EXTENTOFVIEW, SYNTAX_FUNC, VS_S, ST_SPATIAL ,2, EXEC_GLOBAL ,24,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("extentofview"),OP_EXTENTOFVIEW));
 d_ops.back().pushBackArg(VS_BNO,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_NONSPATIAL);
d_ops.push_back(Operator( "inversedistance",OP_INVERSEDISTANCE, SYNTAX_FUNC, VS_S, ST_SPATIAL ,5, EXEC_GLOBAL ,25,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("inversedistance"),OP_INVERSEDISTANCE));
 d_ops.back().pushBackArg(VS_B,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "spread",OP_SPREAD, SYNTAX_FUNC, VS_S, ST_SPATIAL ,3, EXEC_DOUBLE ,18,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("spread"),OP_SPREAD));
 d_ops.back().pushBackArg(VS_BNO,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "spreadmax",OP_SPREADMAX, SYNTAX_FUNC, VS_S, ST_SPATIAL ,4, EXEC_DOUBLE ,19,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("spreadmax"),OP_SPREADMAX));
 d_ops.back().pushBackArg(VS_BNO,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "spreadldd",OP_SPREADLDD, SYNTAX_FUNC, VS_S, ST_SPATIAL ,4, EXEC_DOUBLE ,20,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("spreadldd"),OP_SPREADLDD));
 d_ops.back().pushBackArg(VS_L,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_BNO,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "catchment",OP_CATCHMENT, SYNTAX_FUNC, VS_BNO, ST_SPATIAL ,2, EXEC_GLOBAL ,26,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("catchment"),OP_CATCHMENT));
 d_ops.back().pushBackArg(VS_L,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_BNO,ST_SPATIAL);
d_ops.push_back(Operator( "subcatchment",OP_SUBCATCHMENT, SYNTAX_FUNC, VS_BNO, ST_SPATIAL ,2, EXEC_GLOBAL ,27,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("subcatchment"),OP_SUBCATCHMENT));
 d_ops.back().pushBackArg(VS_L,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_BNO,ST_SPATIAL);
d_ops.push_back(Operator( "windowaverage",OP_WINDOWAVERAGE, SYNTAX_FUNC, VS_S, ST_SPATIAL ,2, EXEC_GLOBAL ,28,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("windowaverage"),OP_WINDOWAVERAGE));
 d_ops.back().pushBackArg(VS_S,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "markwhilesumle",OP_MARKWHILESUMLE, SYNTAX_FUNC, VS_B, ST_SPATIAL ,3, EXEC_GLOBAL ,29,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("markwhilesumle"),OP_MARKWHILESUMLE));
 d_ops.back().pushBackArg(VS_S,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_NONSPATIAL);
d_ops.push_back(Operator( "markuntilsumge",OP_MARKUNTILSUMGE, SYNTAX_FUNC, VS_B, ST_SPATIAL ,3, EXEC_GLOBAL ,30,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("markuntilsumge"),OP_MARKUNTILSUMGE));
 d_ops.back().pushBackArg(VS_S,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_NONSPATIAL);
d_ops.push_back(Operator( "ellipseaverage",OP_ELLIPSEAVERAGE, SYNTAX_FUNC, VS_S, ST_SPATIAL ,4, EXEC_GLOBAL ,31,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("ellipseaverage"),OP_ELLIPSEAVERAGE));
 d_ops.back().pushBackArg(VS_S,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_D,ST_DERIVED);
d_ops.push_back(Operator( "influencesimplegauss",OP_INFLUENCESIMPLEGAUSS, SYNTAX_FUNC, VS_S, ST_SPATIAL ,3, EXEC_GLOBAL ,32,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("influencesimplegauss"),OP_INFLUENCESIMPLEGAUSS));
 d_ops.back().pushBackArg(VS_S,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "distributesimplegauss",OP_DISTRIBUTESIMPLEGAUSS, SYNTAX_FUNC, VS_S, ST_SPATIAL ,3, EXEC_GLOBAL ,33,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("distributesimplegauss"),OP_DISTRIBUTESIMPLEGAUSS));
 d_ops.back().pushBackArg(VS_S,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "ibngauss",OP_IBNGAUSS, SYNTAX_FUNC, VS_S, ST_SPATIAL ,3, EXEC_GLOBAL ,34,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("ibngauss"),OP_IBNGAUSS));
 d_ops.back().pushBackArg(VS_S,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "horizontan",OP_HORIZONTAN, SYNTAX_FUNC, VS_S, ST_SPATIAL ,2, EXEC_GLOBAL ,35,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("horizontan"),OP_HORIZONTAN));
 d_ops.back().pushBackArg(VS_S,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_D,ST_DERIVED);
d_ops.push_back(Operator( "catchmenttotal",OP_CATCHMENTTOTAL, SYNTAX_FUNC, VS_S, ST_SPATIAL ,2, EXEC_GLOBAL ,36,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("catchmenttotal"),OP_CATCHMENTTOTAL));
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_L,ST_SPATIAL);
d_ops.push_back(Operator( "areaaverage",OP_AREAAVERAGE, SYNTAX_FUNC, VS_S, ST_SPATIAL ,2, EXEC_GLOBAL ,37,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("areaaverage"),OP_AREAAVERAGE));
 d_ops.back().pushBackArg(VS_S,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_BNO,ST_SPATIAL);
d_ops.push_back(Operator( "areatotal",OP_AREATOTAL, SYNTAX_FUNC, VS_S, ST_SPATIAL ,2, EXEC_GLOBAL ,38,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("areatotal"),OP_AREATOTAL));
 d_ops.back().pushBackArg(VS_S,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_BNO,ST_SPATIAL);
d_ops.push_back(Operator( "areauniform",OP_AREAUNIFORM, SYNTAX_FUNC, VS_S, ST_SPATIAL ,1, EXEC_GLOBAL ,39,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("areauniform"),OP_AREAUNIFORM));
 d_ops.back().pushBackArg(VS_BNO,ST_SPATIAL);
d_ops.push_back(Operator( "areanormal",OP_AREANORMAL, SYNTAX_FUNC, VS_S, ST_SPATIAL ,1, EXEC_GLOBAL ,40,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("areanormal"),OP_AREANORMAL));
 d_ops.back().pushBackArg(VS_BNO,ST_SPATIAL);
d_ops.push_back(Operator( "windowtotal",OP_WINDOWTOTAL, SYNTAX_FUNC, VS_S, ST_SPATIAL ,2, EXEC_GLOBAL ,41,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("windowtotal"),OP_WINDOWTOTAL));
 d_ops.back().pushBackArg(VS_S,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "windowhighpass",OP_WINDOWHIGHPASS, SYNTAX_FUNC, VS_S, ST_SPATIAL ,2, EXEC_GLOBAL ,42,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("windowhighpass"),OP_WINDOWHIGHPASS));
 d_ops.back().pushBackArg(VS_S,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "ldddist",OP_LDDDIST, SYNTAX_FUNC, VS_S, ST_SPATIAL ,3, EXEC_GLOBAL ,43,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("ldddist"),OP_LDDDIST));
 d_ops.back().pushBackArg(VS_L,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_B,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "downstreamtotal",OP_DOWNSTREAMTOTAL, SYNTAX_FUNC, VS_S, ST_SPATIAL ,2, EXEC_GLOBAL ,44,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("downstreamtotal"),OP_DOWNSTREAMTOTAL));
 d_ops.back().pushBackArg(VS_L,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "upstream",OP_UPSTREAM, SYNTAX_FUNC, VS_S, ST_SPATIAL ,2, EXEC_GLOBAL ,45,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("upstream"),OP_UPSTREAM));
 d_ops.back().pushBackArg(VS_L,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "streamorder",OP_STREAMORDER, SYNTAX_FUNC, VS_O, ST_SPATIAL ,1, EXEC_GLOBAL ,46,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("streamorder"),OP_STREAMORDER));
 d_ops.back().pushBackArg(VS_L,ST_SPATIAL);
d_ops.push_back(Operator( "transient",OP_TRANSIENT, SYNTAX_FUNC, VS_S, ST_SPATIAL ,7, EXEC_GLOBAL ,47,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("transient"),OP_TRANSIENT));
 d_ops.back().pushBackArg(VS_S,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_N,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_NONSPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_NONSPATIAL);
d_ops.push_back(Operator( "downstream",OP_DOWNSTREAM, SYNTAX_FUNC, VS_FIELD, ST_SPATIAL ,2, EXEC_GLOBAL ,48,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("downstream"),OP_DOWNSTREAM));
 d_ops.back().pushBackArg(VS_L,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_FIELD,ST_DERIVED);
d_ops.push_back(Operator( "downstreamdist",OP_DOWNSTREAMDIST, SYNTAX_FUNC, VS_S, ST_SPATIAL ,1, EXEC_DIFF_UN ,5,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("downstreamdist"),OP_DOWNSTREAMDIST));
 d_ops.back().pushBackArg(VS_L,ST_SPATIAL);
d_ops.push_back(Operator( "lddmask",OP_LDDMASK, SYNTAX_FUNC, VS_L, ST_SPATIAL ,2, EXEC_GLOBAL ,49,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("lddmask"),OP_LDDMASK));
 d_ops.back().pushBackArg(VS_L,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_B,ST_SPATIAL);
d_ops.push_back(Operator( "lddrepair",OP_LDDREPAIR, SYNTAX_FUNC, VS_L, ST_SPATIAL ,1, EXEC_GLOBAL ,50,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("lddrepair"),OP_LDDREPAIR));
 d_ops.back().pushBackArg(VS_L,ST_DERIVED);
d_ops.push_back(Operator( "slopelength",OP_SLOPELENGTH, SYNTAX_FUNC, VS_S, ST_SPATIAL ,2, EXEC_GLOBAL ,51,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("slopelength"),OP_SLOPELENGTH));
 d_ops.back().pushBackArg(VS_L,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "lddcreate",OP_LDDCREATE, SYNTAX_FUNC, VS_L, ST_SPATIAL ,5, EXEC_DOUBLE ,21,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("lddcreate"),OP_LDDCREATE));
 d_ops.back().pushBackArg(VS_S,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "lddcreatedem",OP_LDDCREATEDEM, SYNTAX_FUNC, VS_S, ST_SPATIAL ,5, EXEC_DOUBLE ,22,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("lddcreatedem"),OP_LDDCREATEDEM));
 d_ops.back().pushBackArg(VS_S,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "sin",OP_SIN_D, SYNTAX_NONE, VS_S, ST_DERIVED ,1, EXEC_SAME_UN ,18,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_D,ST_DERIVED);
d_ops.push_back(Operator( "cos",OP_COS_D, SYNTAX_NONE, VS_S, ST_DERIVED ,1, EXEC_SAME_UN ,19,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_D,ST_DERIVED);
d_ops.push_back(Operator( "tan",OP_TAN_D, SYNTAX_NONE, VS_S, ST_DERIVED ,1, EXEC_SAME_UN ,20,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_D,ST_DERIVED);
d_ops.push_back(Operator( "sin",OP_SIN_S, SYNTAX_NONE, VS_S, ST_DERIVED ,1, EXEC_SAME_UN ,21,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "cos",OP_COS_S, SYNTAX_NONE, VS_S, ST_DERIVED ,1, EXEC_SAME_UN ,22,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "tan",OP_TAN_S, SYNTAX_NONE, VS_S, ST_DERIVED ,1, EXEC_SAME_UN ,23,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "timeoutput",OP_TIMEOUTPUT_4, SYNTAX_NONE, VS_TSS, ST_NON ,2, EXEC_TOUT ,0,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_BNO,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_BNOL,ST_DERIVED);
d_ops.push_back(Operator( "timeoutput",OP_TIMEOUTPUT_S, SYNTAX_NONE, VS_TSS, ST_NON ,2, EXEC_TOUT ,1,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_BNO,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_SD,ST_DERIVED);
d_ops.push_back(Operator( "min",OP_MIN_4, SYNTAX_NONE, VS_O, ST_DERIVED ,2, EXEC_SAME_BIN ,10,CG_COMM)); 
 d_ops.back().pushBackArg(VS_O,ST_DERIVED);
 d_ops.back().pushBackArg(VS_O,ST_DERIVED);
d_ops.push_back(Operator( "min",OP_MIN_S, SYNTAX_NONE, VS_S, ST_DERIVED ,2, EXEC_SAME_BIN ,11,CG_COMM)); 
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "max",OP_MAX_4, SYNTAX_NONE, VS_O, ST_DERIVED ,2, EXEC_SAME_BIN ,12,CG_COMM)); 
 d_ops.back().pushBackArg(VS_O,ST_DERIVED);
 d_ops.back().pushBackArg(VS_O,ST_DERIVED);
d_ops.push_back(Operator( "max",OP_MAX_S, SYNTAX_NONE, VS_S, ST_DERIVED ,2, EXEC_SAME_BIN ,13,CG_COMM)); 
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "cover",OP_COVER_1, SYNTAX_NONE, VS_BL, ST_DERIVED ,2, EXEC_SAME_BIN ,14,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_BL,ST_DERIVED);
 d_ops.back().pushBackArg(VS_BL,ST_DERIVED);
d_ops.push_back(Operator( "cover",OP_COVER_4, SYNTAX_NONE, VS_NO, ST_DERIVED ,2, EXEC_SAME_BIN ,15,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_NO,ST_DERIVED);
 d_ops.back().pushBackArg(VS_NO,ST_DERIVED);
d_ops.push_back(Operator( "cover",OP_COVER_S, SYNTAX_NONE, VS_SD, ST_DERIVED ,2, EXEC_SAME_BIN ,16,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_SD,ST_DERIVED);
 d_ops.back().pushBackArg(VS_SD,ST_DERIVED);
d_ops.push_back(Operator( "ne",OP_NE_1, SYNTAX_NONE, VS_B, ST_DERIVED ,2, EXEC_SAME_BIN ,17,CG_COMM)); 
 d_ops.back().pushBackArg(VS_BL,ST_DERIVED);
 d_ops.back().pushBackArg(VS_BL,ST_DERIVED);
d_ops.push_back(Operator( "ne",OP_NE_4, SYNTAX_NONE, VS_B, ST_DERIVED ,2, EXEC_DIFF_BIN ,0,CG_COMM)); 
 d_ops.back().pushBackArg(VS_NO,ST_DERIVED);
 d_ops.back().pushBackArg(VS_NO,ST_DERIVED);
d_ops.push_back(Operator( "ne",OP_NE_S, SYNTAX_NONE, VS_B, ST_DERIVED ,2, EXEC_DIFF_BIN ,1,CG_COMM)); 
 d_ops.back().pushBackArg(VS_SD,ST_DERIVED);
 d_ops.back().pushBackArg(VS_SD,ST_DERIVED);
d_ops.push_back(Operator( "eq",OP_EQ_1, SYNTAX_NONE, VS_B, ST_DERIVED ,2, EXEC_SAME_BIN ,18,CG_COMM)); 
 d_ops.back().pushBackArg(VS_BL,ST_DERIVED);
 d_ops.back().pushBackArg(VS_BL,ST_DERIVED);
d_ops.push_back(Operator( "eq",OP_EQ_4, SYNTAX_NONE, VS_B, ST_DERIVED ,2, EXEC_DIFF_BIN ,2,CG_COMM)); 
 d_ops.back().pushBackArg(VS_NO,ST_DERIVED);
 d_ops.back().pushBackArg(VS_NO,ST_DERIVED);
d_ops.push_back(Operator( "eq",OP_EQ_S, SYNTAX_NONE, VS_B, ST_DERIVED ,2, EXEC_DIFF_BIN ,3,CG_COMM)); 
 d_ops.back().pushBackArg(VS_SD,ST_DERIVED);
 d_ops.back().pushBackArg(VS_SD,ST_DERIVED);
d_ops.push_back(Operator( "gt",OP_GT_4, SYNTAX_NONE, VS_B, ST_DERIVED ,2, EXEC_DIFF_BIN ,4,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_NO,ST_DERIVED);
 d_ops.back().pushBackArg(VS_NO,ST_DERIVED);
d_ops.push_back(Operator( "gt",OP_GT_S, SYNTAX_NONE, VS_B, ST_DERIVED ,2, EXEC_DIFF_BIN ,5,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_SD,ST_DERIVED);
 d_ops.back().pushBackArg(VS_SD,ST_DERIVED);
d_ops.push_back(Operator( "ge",OP_GE_4, SYNTAX_NONE, VS_B, ST_DERIVED ,2, EXEC_DIFF_BIN ,6,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_NO,ST_DERIVED);
 d_ops.back().pushBackArg(VS_NO,ST_DERIVED);
d_ops.push_back(Operator( "ge",OP_GE_S, SYNTAX_NONE, VS_B, ST_DERIVED ,2, EXEC_DIFF_BIN ,7,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_SD,ST_DERIVED);
 d_ops.back().pushBackArg(VS_SD,ST_DERIVED);
d_ops.push_back(Operator( "lt",OP_LT_4, SYNTAX_NONE, VS_B, ST_DERIVED ,2, EXEC_DIFF_BIN ,8,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_NO,ST_DERIVED);
 d_ops.back().pushBackArg(VS_NO,ST_DERIVED);
d_ops.push_back(Operator( "lt",OP_LT_S, SYNTAX_NONE, VS_B, ST_DERIVED ,2, EXEC_DIFF_BIN ,9,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_SD,ST_DERIVED);
 d_ops.back().pushBackArg(VS_SD,ST_DERIVED);
d_ops.push_back(Operator( "le",OP_LE_4, SYNTAX_NONE, VS_B, ST_DERIVED ,2, EXEC_DIFF_BIN ,10,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_NO,ST_DERIVED);
 d_ops.back().pushBackArg(VS_NO,ST_DERIVED);
d_ops.push_back(Operator( "le",OP_LE_S, SYNTAX_NONE, VS_B, ST_DERIVED ,2, EXEC_DIFF_BIN ,11,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_SD,ST_DERIVED);
 d_ops.back().pushBackArg(VS_SD,ST_DERIVED);
d_ops.push_back(Operator( "4to1",OP_4TO1, SYNTAX_NONE, VS_BL, ST_DERIVED ,1, EXEC_DIFF_UN ,6,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_NO,ST_DERIVED);
d_ops.push_back(Operator( "sto1",OP_STO1, SYNTAX_NONE, VS_BL, ST_DERIVED ,1, EXEC_DIFF_UN ,7,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_SD,ST_DERIVED);
d_ops.push_back(Operator( "sto4",OP_STO4, SYNTAX_NONE, VS_NO, ST_DERIVED ,1, EXEC_DIFF_UN ,8,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_SD,ST_DERIVED);
d_ops.push_back(Operator( "1_2_b",OP_1_2_B, SYNTAX_NONE, VS_B, ST_DERIVED ,1, EXEC_SAME_UN ,24,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_L,ST_DERIVED);
d_ops.push_back(Operator( "4_2_b",OP_4_2_B, SYNTAX_NONE, VS_B, ST_DERIVED ,1, EXEC_DIFF_UN ,9,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_NO,ST_DERIVED);
d_ops.push_back(Operator( "s_2_b",OP_S_2_B, SYNTAX_NONE, VS_B, ST_DERIVED ,1, EXEC_DIFF_UN ,10,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_SD,ST_DERIVED);
d_ops.push_back(Operator( "1_2_4",OP_1_2_4, SYNTAX_NONE, VS_NO, ST_DERIVED ,1, EXEC_DIFF_UN ,11,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_BL,ST_DERIVED);
d_ops.push_back(Operator( "s_2_4",OP_S_2_4, SYNTAX_NONE, VS_NO, ST_DERIVED ,1, EXEC_DIFF_UN ,12,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "1_2_s",OP_1_2_S, SYNTAX_NONE, VS_SD, ST_DERIVED ,1, EXEC_DIFF_UN ,13,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_BL,ST_DERIVED);
d_ops.push_back(Operator( "4_2_s",OP_4_2_S, SYNTAX_NONE, VS_SD, ST_DERIVED ,1, EXEC_DIFF_UN ,14,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_NO,ST_DERIVED);
d_ops.push_back(Operator( "s_2_d",OP_S_2_D, SYNTAX_NONE, VS_D, ST_DERIVED ,1, EXEC_SAME_UN ,25,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "d_2_s",OP_D_2_S, SYNTAX_NONE, VS_S, ST_DERIVED ,1, EXEC_SAME_UN ,26,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_D,ST_DERIVED);
d_ops.push_back(Operator( "1_2_d",OP_1_2_D, SYNTAX_NONE, VS_D, ST_DERIVED ,1, EXEC_DIFF_UN ,15,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_B,ST_DERIVED);
d_ops.push_back(Operator( "4_2_d",OP_4_2_D, SYNTAX_NONE, VS_D, ST_DERIVED ,1, EXEC_DIFF_UN ,16,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_NO,ST_DERIVED);
d_ops.push_back(Operator( "l_2_d",OP_L_2_D, SYNTAX_NONE, VS_D, ST_DERIVED ,1, EXEC_DIFF_UN ,17,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_L,ST_DERIVED);
d_ops.push_back(Operator( "4_2_l",OP_4_2_L, SYNTAX_NONE, VS_L, ST_DERIVED ,1, EXEC_DIFF_UN ,18,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_NO,ST_DERIVED);
d_ops.push_back(Operator( "s_2_l",OP_S_2_L, SYNTAX_NONE, VS_L, ST_DERIVED ,1, EXEC_DIFF_UN ,19,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "d_2_l",OP_D_2_L, SYNTAX_NONE, VS_L, ST_DERIVED ,1, EXEC_DIFF_UN ,20,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_D,ST_DERIVED);
d_ops.push_back(Operator( "mapminimum",OP_MAPMINIMUM_4, SYNTAX_NONE, VS_O, ST_NONSPATIAL ,1, EXEC_DIFF_UN ,21,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_O,ST_SPATIAL);
d_ops.push_back(Operator( "mapminimum",OP_MAPMINIMUM_S, SYNTAX_NONE, VS_S, ST_NONSPATIAL ,1, EXEC_DIFF_UN ,22,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_S,ST_SPATIAL);
d_ops.push_back(Operator( "mapmaximum",OP_MAPMAXIMUM_4, SYNTAX_NONE, VS_O, ST_NONSPATIAL ,1, EXEC_DIFF_UN ,23,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_O,ST_SPATIAL);
d_ops.push_back(Operator( "mapmaximum",OP_MAPMAXIMUM_S, SYNTAX_NONE, VS_S, ST_NONSPATIAL ,1, EXEC_DIFF_UN ,24,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_S,ST_SPATIAL);
d_ops.push_back(Operator( "maparea",OP_MAPAREA_1, SYNTAX_NONE, VS_S, ST_NONSPATIAL ,1, EXEC_DIFF_UN ,25,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_BL,ST_SPATIAL);
d_ops.push_back(Operator( "maparea",OP_MAPAREA_4, SYNTAX_NONE, VS_S, ST_NONSPATIAL ,1, EXEC_DIFF_UN ,26,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_NO,ST_SPATIAL);
d_ops.push_back(Operator( "maparea",OP_MAPAREA_S, SYNTAX_NONE, VS_S, ST_NONSPATIAL ,1, EXEC_DIFF_UN ,27,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_SD,ST_SPATIAL);
d_ops.push_back(Operator( "spatial",OP_SPATIAL_1, SYNTAX_NONE, VS_BL, ST_SPATIAL ,1, EXEC_DIFF_UN ,28,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_BL,ST_DERIVED);
d_ops.push_back(Operator( "spatial",OP_SPATIAL_4, SYNTAX_NONE, VS_NO, ST_SPATIAL ,1, EXEC_DIFF_UN ,29,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_NO,ST_DERIVED);
d_ops.push_back(Operator( "spatial",OP_SPATIAL_S, SYNTAX_NONE, VS_SD, ST_SPATIAL ,1, EXEC_DIFF_UN ,30,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_SD,ST_DERIVED);
d_ops.push_back(Operator( "defined",OP_DEFINED_1, SYNTAX_NONE, VS_B, ST_SPATIAL ,1, EXEC_SAME_UN ,27,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_BL,ST_DERIVED);
d_ops.push_back(Operator( "defined",OP_DEFINED_4, SYNTAX_NONE, VS_B, ST_SPATIAL ,1, EXEC_DIFF_UN ,31,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_NO,ST_DERIVED);
d_ops.push_back(Operator( "defined",OP_DEFINED_S, SYNTAX_NONE, VS_B, ST_SPATIAL ,1, EXEC_DIFF_UN ,32,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_SD,ST_DERIVED);
d_ops.push_back(Operator( "if",OP_IF_1, SYNTAX_NONE, VS_BL, ST_DERIVED ,2, EXEC_IFTHEN ,0,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_B,ST_DERIVED);
 d_ops.back().pushBackArg(VS_BL,ST_DERIVED);
d_ops.push_back(Operator( "if",OP_IF_4, SYNTAX_NONE, VS_NO, ST_DERIVED ,2, EXEC_IFTHEN ,1,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_B,ST_DERIVED);
 d_ops.back().pushBackArg(VS_NO,ST_DERIVED);
d_ops.push_back(Operator( "if",OP_IF_S, SYNTAX_NONE, VS_SD, ST_DERIVED ,2, EXEC_IFTHEN ,2,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_B,ST_DERIVED);
 d_ops.back().pushBackArg(VS_SD,ST_DERIVED);
d_ops.push_back(Operator( "if",OP_IF_ELSE_1, SYNTAX_NONE, VS_BL, ST_DERIVED ,3, EXEC_IFTHENELSE ,0,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_B,ST_DERIVED);
 d_ops.back().pushBackArg(VS_BL,ST_DERIVED);
 d_ops.back().pushBackArg(VS_BL,ST_DERIVED);
d_ops.push_back(Operator( "if",OP_IF_ELSE_4, SYNTAX_NONE, VS_NO, ST_DERIVED ,3, EXEC_IFTHENELSE ,1,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_B,ST_DERIVED);
 d_ops.back().pushBackArg(VS_NO,ST_DERIVED);
 d_ops.back().pushBackArg(VS_NO,ST_DERIVED);
d_ops.push_back(Operator( "if",OP_IF_ELSE_S, SYNTAX_NONE, VS_SD, ST_DERIVED ,3, EXEC_IFTHENELSE ,2,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_B,ST_DERIVED);
 d_ops.back().pushBackArg(VS_SD,ST_DERIVED);
 d_ops.back().pushBackArg(VS_SD,ST_DERIVED);
d_ops.push_back(Operator( "spread",OP_SPREAD_IMPL, SYNTAX_NONE, VS_S, ST_SPATIAL ,3, EXEC_DASS ,7,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_BNO,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "spreadmax",OP_SPREADMAX_IMPL, SYNTAX_NONE, VS_S, ST_SPATIAL ,4, EXEC_DASS ,8,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_BNO,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "dynamicwaveh",OP_DYNAMICWAVEH, SYNTAX_FUNC, VS_S, ST_SPATIAL ,16, EXEC_DOUBLE ,23,CG_PLAIN)); 
 d_funcs.insert(std::make_pair(std::string("dynamicwaveh"),OP_DYNAMICWAVEH));
 d_ops.back().pushBackArg(VS_L,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_NONSPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_NONSPATIAL);
 d_ops.back().pushBackArg(VS_B,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "spreadldd",OP_SPREADLDD_IMPL, SYNTAX_NONE, VS_S, ST_SPATIAL ,4, EXEC_DASS ,9,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_L,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_BNO,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "lddcreate",OP_LDDCREATE_IMPL, SYNTAX_NONE, VS_L, ST_SPATIAL ,5, EXEC_DASS ,10,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_S,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
d_ops.push_back(Operator( "dynamicwave",OP_DYNAMICWAVE, SYNTAX_NONE, VS_S, ST_SPATIAL ,16, EXEC_DASS ,11,CG_PLAIN)); 
 d_ops.back().pushBackArg(VS_L,ST_SPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_NONSPATIAL);
 d_ops.back().pushBackArg(VS_S,ST_NONSPATIAL);
 d_ops.back().pushBackArg(VS_B,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
 d_ops.back().pushBackArg(VS_S,ST_DERIVED);
